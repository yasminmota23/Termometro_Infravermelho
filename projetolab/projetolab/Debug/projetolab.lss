
projetolab.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  000009cc  00000a60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800116  00800116  00000a76  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a76  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000aa8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b6c  00000000  00000000  00000b90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000756  00000000  00000000  000016fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008d8  00000000  00000000  00001e52  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c8  00000000  00000000  0000272c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00007178  00000000  00000000  000028f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000386  00000000  00000000  00009a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00009df2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000293d  00000000  00000000  00009e8a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 8a 02 	jmp	0x514	; 0x514 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__vector_23>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ec       	ldi	r30, 0xCC	; 204
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 31       	cpi	r26, 0x16	; 22
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e1       	ldi	r26, 0x16	; 22
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 31       	cpi	r26, 0x1E	; 30
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <main>
  9e:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <i2c_init>:
}

void lcd_lef_sh()
{
	lcd_cmd(0x18);      //Comando para deslocamento à esquerda
	delay(200);
  a6:	82 e6       	ldi	r24, 0x62	; 98
  a8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  ac:	84 e0       	ldi	r24, 0x04	; 4
  ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  b2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  b6:	08 95       	ret

000000b8 <i2c_start>:
  b8:	84 ea       	ldi	r24, 0xA4	; 164
  ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  be:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  c2:	88 23       	and	r24, r24
  c4:	e4 f7       	brge	.-8      	; 0xbe <i2c_start+0x6>
  c6:	08 95       	ret

000000c8 <i2c_write>:
  c8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  cc:	84 e8       	ldi	r24, 0x84	; 132
  ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  d2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  d6:	88 23       	and	r24, r24
  d8:	e4 f7       	brge	.-8      	; 0xd2 <i2c_write+0xa>
  da:	08 95       	ret

000000dc <delay>:
  dc:	40 e0       	ldi	r20, 0x00	; 0
  de:	50 e0       	ldi	r21, 0x00	; 0
  e0:	0a c0       	rjmp	.+20     	; 0xf6 <delay+0x1a>
  e2:	2f 5f       	subi	r18, 0xFF	; 255
  e4:	3f 4f       	sbci	r19, 0xFF	; 255
  e6:	02 c0       	rjmp	.+4      	; 0xec <delay+0x10>
  e8:	20 e0       	ldi	r18, 0x00	; 0
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	29 37       	cpi	r18, 0x79	; 121
  ee:	31 05       	cpc	r19, r1
  f0:	c4 f3       	brlt	.-16     	; 0xe2 <delay+0x6>
  f2:	4f 5f       	subi	r20, 0xFF	; 255
  f4:	5f 4f       	sbci	r21, 0xFF	; 255
  f6:	84 17       	cp	r24, r20
  f8:	95 07       	cpc	r25, r21
  fa:	b4 f7       	brge	.-20     	; 0xe8 <delay+0xc>
  fc:	08 95       	ret

000000fe <toggle>:
  fe:	eb eb       	ldi	r30, 0xBB	; 187
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	82 60       	ori	r24, 0x02	; 2
 106:	80 83       	st	Z, r24
 108:	84 e8       	ldi	r24, 0x84	; 132
 10a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 10e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 112:	88 23       	and	r24, r24
 114:	e4 f7       	brge	.-8      	; 0x10e <toggle+0x10>
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 6e 00 	call	0xdc	; 0xdc <delay>
 11e:	eb eb       	ldi	r30, 0xBB	; 187
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	8d 7f       	andi	r24, 0xFD	; 253
 126:	80 83       	st	Z, r24
 128:	84 e8       	ldi	r24, 0x84	; 132
 12a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 12e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 132:	88 23       	and	r24, r24
 134:	e4 f7       	brge	.-8      	; 0x12e <toggle+0x30>
 136:	08 95       	ret

00000138 <lcd_cmd_hf>:
 138:	eb eb       	ldi	r30, 0xBB	; 187
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	90 81       	ld	r25, Z
 13e:	9e 7f       	andi	r25, 0xFE	; 254
 140:	90 83       	st	Z, r25
 142:	94 e8       	ldi	r25, 0x84	; 132
 144:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 148:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 14c:	99 23       	and	r25, r25
 14e:	e4 f7       	brge	.-8      	; 0x148 <lcd_cmd_hf+0x10>
 150:	eb eb       	ldi	r30, 0xBB	; 187
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	90 81       	ld	r25, Z
 156:	9f 70       	andi	r25, 0x0F	; 15
 158:	90 83       	st	Z, r25
 15a:	94 e8       	ldi	r25, 0x84	; 132
 15c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 160:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 164:	99 23       	and	r25, r25
 166:	e4 f7       	brge	.-8      	; 0x160 <lcd_cmd_hf+0x28>
 168:	eb eb       	ldi	r30, 0xBB	; 187
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	90 81       	ld	r25, Z
 16e:	80 7f       	andi	r24, 0xF0	; 240
 170:	89 2b       	or	r24, r25
 172:	80 83       	st	Z, r24
 174:	84 e8       	ldi	r24, 0x84	; 132
 176:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17e:	88 23       	and	r24, r24
 180:	e4 f7       	brge	.-8      	; 0x17a <lcd_cmd_hf+0x42>
 182:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 186:	08 95       	ret

00000188 <lcd_cmd>:
 188:	cf 93       	push	r28
 18a:	c8 2f       	mov	r28, r24
 18c:	eb eb       	ldi	r30, 0xBB	; 187
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	80 81       	ld	r24, Z
 192:	8e 7f       	andi	r24, 0xFE	; 254
 194:	80 83       	st	Z, r24
 196:	84 e8       	ldi	r24, 0x84	; 132
 198:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 19c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1a0:	88 23       	and	r24, r24
 1a2:	e4 f7       	brge	.-8      	; 0x19c <lcd_cmd+0x14>
 1a4:	eb eb       	ldi	r30, 0xBB	; 187
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	80 81       	ld	r24, Z
 1aa:	8f 70       	andi	r24, 0x0F	; 15
 1ac:	80 83       	st	Z, r24
 1ae:	84 e8       	ldi	r24, 0x84	; 132
 1b0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1b4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1b8:	88 23       	and	r24, r24
 1ba:	e4 f7       	brge	.-8      	; 0x1b4 <lcd_cmd+0x2c>
 1bc:	eb eb       	ldi	r30, 0xBB	; 187
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	9c 2f       	mov	r25, r28
 1c4:	90 7f       	andi	r25, 0xF0	; 240
 1c6:	89 2b       	or	r24, r25
 1c8:	80 83       	st	Z, r24
 1ca:	84 e8       	ldi	r24, 0x84	; 132
 1cc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1d0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1d4:	88 23       	and	r24, r24
 1d6:	e4 f7       	brge	.-8      	; 0x1d0 <lcd_cmd+0x48>
 1d8:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 1dc:	eb eb       	ldi	r30, 0xBB	; 187
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	8f 70       	andi	r24, 0x0F	; 15
 1e4:	80 83       	st	Z, r24
 1e6:	84 e8       	ldi	r24, 0x84	; 132
 1e8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1ec:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1f0:	88 23       	and	r24, r24
 1f2:	e4 f7       	brge	.-8      	; 0x1ec <lcd_cmd+0x64>
 1f4:	eb eb       	ldi	r30, 0xBB	; 187
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	20 81       	ld	r18, Z
 1fa:	30 e1       	ldi	r19, 0x10	; 16
 1fc:	c3 9f       	mul	r28, r19
 1fe:	c0 01       	movw	r24, r0
 200:	11 24       	eor	r1, r1
 202:	82 2b       	or	r24, r18
 204:	80 83       	st	Z, r24
 206:	84 e8       	ldi	r24, 0x84	; 132
 208:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 20c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 210:	88 23       	and	r24, r24
 212:	e4 f7       	brge	.-8      	; 0x20c <lcd_cmd+0x84>
 214:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 218:	cf 91       	pop	r28
 21a:	08 95       	ret

0000021c <lcd_init>:
 21c:	80 e3       	ldi	r24, 0x30	; 48
 21e:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 222:	80 e3       	ldi	r24, 0x30	; 48
 224:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 228:	80 e2       	ldi	r24, 0x20	; 32
 22a:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 22e:	88 e2       	ldi	r24, 0x28	; 40
 230:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 234:	8c e0       	ldi	r24, 0x0C	; 12
 236:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 240:	86 e0       	ldi	r24, 0x06	; 6
 242:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 246:	80 e8       	ldi	r24, 0x80	; 128
 248:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 24c:	08 95       	ret

0000024e <lcd_dwr>:
 24e:	cf 93       	push	r28
 250:	c8 2f       	mov	r28, r24
 252:	eb eb       	ldi	r30, 0xBB	; 187
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 81       	ld	r24, Z
 258:	81 60       	ori	r24, 0x01	; 1
 25a:	80 83       	st	Z, r24
 25c:	84 e8       	ldi	r24, 0x84	; 132
 25e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 262:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 266:	88 23       	and	r24, r24
 268:	e4 f7       	brge	.-8      	; 0x262 <lcd_dwr+0x14>
 26a:	eb eb       	ldi	r30, 0xBB	; 187
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	80 81       	ld	r24, Z
 270:	8f 70       	andi	r24, 0x0F	; 15
 272:	80 83       	st	Z, r24
 274:	84 e8       	ldi	r24, 0x84	; 132
 276:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 27a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 27e:	88 23       	and	r24, r24
 280:	e4 f7       	brge	.-8      	; 0x27a <lcd_dwr+0x2c>
 282:	eb eb       	ldi	r30, 0xBB	; 187
 284:	f0 e0       	ldi	r31, 0x00	; 0
 286:	80 81       	ld	r24, Z
 288:	9c 2f       	mov	r25, r28
 28a:	90 7f       	andi	r25, 0xF0	; 240
 28c:	89 2b       	or	r24, r25
 28e:	80 83       	st	Z, r24
 290:	84 e8       	ldi	r24, 0x84	; 132
 292:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 296:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 29a:	88 23       	and	r24, r24
 29c:	e4 f7       	brge	.-8      	; 0x296 <lcd_dwr+0x48>
 29e:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 2a2:	eb eb       	ldi	r30, 0xBB	; 187
 2a4:	f0 e0       	ldi	r31, 0x00	; 0
 2a6:	80 81       	ld	r24, Z
 2a8:	8f 70       	andi	r24, 0x0F	; 15
 2aa:	80 83       	st	Z, r24
 2ac:	84 e8       	ldi	r24, 0x84	; 132
 2ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2b2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2b6:	88 23       	and	r24, r24
 2b8:	e4 f7       	brge	.-8      	; 0x2b2 <lcd_dwr+0x64>
 2ba:	eb eb       	ldi	r30, 0xBB	; 187
 2bc:	f0 e0       	ldi	r31, 0x00	; 0
 2be:	20 81       	ld	r18, Z
 2c0:	30 e1       	ldi	r19, 0x10	; 16
 2c2:	c3 9f       	mul	r28, r19
 2c4:	c0 01       	movw	r24, r0
 2c6:	11 24       	eor	r1, r1
 2c8:	82 2b       	or	r24, r18
 2ca:	80 83       	st	Z, r24
 2cc:	84 e8       	ldi	r24, 0x84	; 132
 2ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2d2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2d6:	88 23       	and	r24, r24
 2d8:	e4 f7       	brge	.-8      	; 0x2d2 <lcd_dwr+0x84>
 2da:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 2de:	cf 91       	pop	r28
 2e0:	08 95       	ret

000002e2 <lcd_msg>:
 2e2:	cf 93       	push	r28
 2e4:	df 93       	push	r29
 2e6:	ec 01       	movw	r28, r24
 2e8:	03 c0       	rjmp	.+6      	; 0x2f0 <lcd_msg+0xe>
 2ea:	21 96       	adiw	r28, 0x01	; 1
 2ec:	0e 94 27 01 	call	0x24e	; 0x24e <lcd_dwr>
 2f0:	88 81       	ld	r24, Y
 2f2:	81 11       	cpse	r24, r1
 2f4:	fa cf       	rjmp	.-12     	; 0x2ea <lcd_msg+0x8>
 2f6:	df 91       	pop	r29
 2f8:	cf 91       	pop	r28
 2fa:	08 95       	ret

000002fc <__vector_1>:
int off=1,on=0;

unsigned char temp_string[tam_vetor];
uint16_t temp = 0;

ISR (INT0_vect){  // ON ou OFF
 2fc:	1f 92       	push	r1
 2fe:	0f 92       	push	r0
 300:	0f b6       	in	r0, 0x3f	; 63
 302:	0f 92       	push	r0
 304:	11 24       	eor	r1, r1
 306:	2f 93       	push	r18
 308:	3f 93       	push	r19
 30a:	8f 93       	push	r24
 30c:	9f 93       	push	r25
	
	on=!on;
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <on>
 316:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <on+0x1>
 31a:	23 2b       	or	r18, r19
 31c:	11 f0       	breq	.+4      	; 0x322 <__vector_1+0x26>
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <on+0x1>
 326:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <on>
	off=!off;
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 332:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 336:	23 2b       	or	r18, r19
 338:	11 f0       	breq	.+4      	; 0x33e <__vector_1+0x42>
 33a:	80 e0       	ldi	r24, 0x00	; 0
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 342:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	
}
 346:	9f 91       	pop	r25
 348:	8f 91       	pop	r24
 34a:	3f 91       	pop	r19
 34c:	2f 91       	pop	r18
 34e:	0f 90       	pop	r0
 350:	0f be       	out	0x3f, r0	; 63
 352:	0f 90       	pop	r0
 354:	1f 90       	pop	r1
 356:	18 95       	reti

00000358 <int2string>:


void int2string(unsigned int valor, unsigned char *disp)
{
 358:	ac 01       	movw	r20, r24

	for(uint8_t n=0; n<tam_vetor; n++)
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	06 c0       	rjmp	.+12     	; 0x36a <int2string+0x12>
	disp[n] = 0 + 48; //limpa vetor para armazenagem dos digitos
 35e:	fb 01       	movw	r30, r22
 360:	e8 0f       	add	r30, r24
 362:	f1 1d       	adc	r31, r1
 364:	90 e3       	ldi	r25, 0x30	; 48
 366:	90 83       	st	Z, r25


void int2string(unsigned int valor, unsigned char *disp)
{

	for(uint8_t n=0; n<tam_vetor; n++)
 368:	8f 5f       	subi	r24, 0xFF	; 255
 36a:	84 30       	cpi	r24, 0x04	; 4
 36c:	c0 f3       	brcs	.-16     	; 0x35e <int2string+0x6>
	disp[n] = 0 + 48; //limpa vetor para armazenagem dos digitos
	disp += (tam_vetor-1);
 36e:	fb 01       	movw	r30, r22
 370:	33 96       	adiw	r30, 0x03	; 3
	do
	{
		*disp = (valor%10) + 48; //pega o resto da divisão por 10
 372:	9a 01       	movw	r18, r20
 374:	ad ec       	ldi	r26, 0xCD	; 205
 376:	bc ec       	ldi	r27, 0xCC	; 204
 378:	0e 94 d5 04 	call	0x9aa	; 0x9aa <__umulhisi3>
 37c:	96 95       	lsr	r25
 37e:	87 95       	ror	r24
 380:	96 95       	lsr	r25
 382:	87 95       	ror	r24
 384:	96 95       	lsr	r25
 386:	87 95       	ror	r24
 388:	9c 01       	movw	r18, r24
 38a:	22 0f       	add	r18, r18
 38c:	33 1f       	adc	r19, r19
 38e:	88 0f       	add	r24, r24
 390:	99 1f       	adc	r25, r25
 392:	88 0f       	add	r24, r24
 394:	99 1f       	adc	r25, r25
 396:	88 0f       	add	r24, r24
 398:	99 1f       	adc	r25, r25
 39a:	82 0f       	add	r24, r18
 39c:	93 1f       	adc	r25, r19
 39e:	9a 01       	movw	r18, r20
 3a0:	28 1b       	sub	r18, r24
 3a2:	39 0b       	sbc	r19, r25
 3a4:	c9 01       	movw	r24, r18
 3a6:	80 5d       	subi	r24, 0xD0	; 208
 3a8:	80 83       	st	Z, r24
		valor /=10; //pega o inteiro da divisão por 10
 3aa:	9a 01       	movw	r18, r20
 3ac:	0e 94 d5 04 	call	0x9aa	; 0x9aa <__umulhisi3>
 3b0:	ac 01       	movw	r20, r24
 3b2:	56 95       	lsr	r21
 3b4:	47 95       	ror	r20
 3b6:	56 95       	lsr	r21
 3b8:	47 95       	ror	r20
 3ba:	56 95       	lsr	r21
 3bc:	47 95       	ror	r20
		disp--;
 3be:	31 97       	sbiw	r30, 0x01	; 1
	}while (valor!=0);
 3c0:	41 15       	cp	r20, r1
 3c2:	51 05       	cpc	r21, r1
 3c4:	b1 f6       	brne	.-84     	; 0x372 <int2string+0x1a>
	
	
}
 3c6:	08 95       	ret

000003c8 <main>:
int main()
{
	DDRB = 0x01; //pino do LED como saída
 3c8:	91 e0       	ldi	r25, 0x01	; 1
 3ca:	94 b9       	out	0x04, r25	; 4
	DDRB |= (1<<som); //habilita a saída de som
 3cc:	84 b1       	in	r24, 0x04	; 4
 3ce:	82 60       	ori	r24, 0x02	; 2
 3d0:	84 b9       	out	0x04, r24	; 4
	DDRC= 0X00; // PORTA C como entrada
 3d2:	17 b8       	out	0x07, r1	; 7
	DDRD = 0x00;//PORTA D(do comparador) como entrada 
 3d4:	1a b8       	out	0x0a, r1	; 10
	PORTC= 0XFE; // desabilita o pull-up do PC0
 3d6:	8e ef       	ldi	r24, 0xFE	; 254
 3d8:	88 b9       	out	0x08, r24	; 8
	PORTD = 0xFF; //habilita pull-ups
 3da:	2f ef       	ldi	r18, 0xFF	; 255
 3dc:	2b b9       	out	0x0b, r18	; 11
	PORTB = 0xFE; //apaga LED e habilita pull-ups
 3de:	85 b9       	out	0x05, r24	; 5
	// pwm

	ICR1 = 0xFFFF;
 3e0:	2f ef       	ldi	r18, 0xFF	; 255
 3e2:	3f ef       	ldi	r19, 0xFF	; 255
 3e4:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 3e8:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
	// seta TOP para 16bit
	
	// seta PWM com 75% duty cycle ->  49152/65536 =75%


	TCCR1A |= (1 << COM1A1)|(1 << COM1B1);
 3ec:	e0 e8       	ldi	r30, 0x80	; 128
 3ee:	f0 e0       	ldi	r31, 0x00	; 0
 3f0:	80 81       	ld	r24, Z
 3f2:	80 6a       	ori	r24, 0xA0	; 160
 3f4:	80 83       	st	Z, r24
	// seta modo não invertido

	TCCR1A |= (1 << WGM11);
 3f6:	80 81       	ld	r24, Z
 3f8:	82 60       	ori	r24, 0x02	; 2
 3fa:	80 83       	st	Z, r24
	TCCR1B |= (1 << WGM12)|(1 << WGM13);
 3fc:	e1 e8       	ldi	r30, 0x81	; 129
 3fe:	f0 e0       	ldi	r31, 0x00	; 0
 400:	80 81       	ld	r24, Z
 402:	88 61       	ori	r24, 0x18	; 24
 404:	80 83       	st	Z, r24
	// seta PWM no modo rápido usando ICR1 como TOP
	
	TCCR1B |= (1 << CS10);
 406:	80 81       	ld	r24, Z
 408:	81 60       	ori	r24, 0x01	; 1
 40a:	80 83       	st	Z, r24
	// Inicia o timer1 sem prescaler
//-----------------------------------------------------------
	DIDR1 = 0b00000011; //desabilita as entradas digitais nos pinos AIN0 e AIN1
 40c:	83 e0       	ldi	r24, 0x03	; 3
 40e:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <__TEXT_REGION_LENGTH__+0x7f807f>
	
	// Interrupções
	EICRA |= (1<<ISC01) | (0<<ISC00);
 412:	e9 e6       	ldi	r30, 0x69	; 105
 414:	f0 e0       	ldi	r31, 0x00	; 0
 416:	80 81       	ld	r24, Z
 418:	82 60       	ori	r24, 0x02	; 2
 41a:	80 83       	st	Z, r24
	EIMSK = (1<<INT0); //habilita a interrupção externa 0
 41c:	9d bb       	out	0x1d, r25	; 29
	//Configuração do ADC
	ADMUX = 0b01000000; //Tensão interna AVCC
 41e:	80 e4       	ldi	r24, 0x40	; 64
 420:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = 0b11101111; //Habilita o AD, habilita interrupção, modo de conversão contínua, prescaler = 128
 424:	8f ee       	ldi	r24, 0xEF	; 239
 426:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
	ADCSRB = 0x00; //Modo de conversão contínua
 42a:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f807b>
	set_bit(DIDR0,0); //desabilita pino PC0 como I/0, entrada do ADC0
 42e:	ee e7       	ldi	r30, 0x7E	; 126
 430:	f0 e0       	ldi	r31, 0x00	; 0
 432:	80 81       	ld	r24, Z
 434:	81 60       	ori	r24, 0x01	; 1
 436:	80 83       	st	Z, r24
	
	sei(); //habilita a chave geral de interrupções
 438:	78 94       	sei
	
	i2c_init();
 43a:	0e 94 53 00 	call	0xa6	; 0xa6 <i2c_init>
	i2c_start();
 43e:	0e 94 5c 00 	call	0xb8	; 0xb8 <i2c_start>
	i2c_write(0x70);
 442:	80 e7       	ldi	r24, 0x70	; 112
 444:	0e 94 64 00 	call	0xc8	; 0xc8 <i2c_write>
	lcd_init();
 448:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_init>
	
	while(1){
		if(on==1){
 44c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <on>
 450:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <on+0x1>
 454:	01 97       	sbiw	r24, 0x01	; 1
 456:	a1 f5       	brne	.+104    	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
			ACSR = 0<<ACD; // liga alimentação do comparador
 458:	10 be       	out	0x30, r1	; 48
			ACSR = 1<<ACIE; //habilita interrupção por mudança de estado na saída do comparador
 45a:	88 e0       	ldi	r24, 0x08	; 8
 45c:	80 bf       	out	0x30, r24	; 48
			lcd_cmd(0x80);
 45e:	80 e8       	ldi	r24, 0x80	; 128
 460:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
			lcd_msg("Temperatura:");
 464:	82 e0       	ldi	r24, 0x02	; 2
 466:	91 e0       	ldi	r25, 0x01	; 1
 468:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
			lcd_cmd(0xC3);
 46c:	83 ec       	ldi	r24, 0xC3	; 195
 46e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
			int2string(temp,temp_string);
 472:	6a e1       	ldi	r22, 0x1A	; 26
 474:	71 e0       	ldi	r23, 0x01	; 1
 476:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 47a:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 47e:	0e 94 ac 01 	call	0x358	; 0x358 <int2string>
			lcd_msg(temp_string);
 482:	8a e1       	ldi	r24, 0x1A	; 26
 484:	91 e0       	ldi	r25, 0x01	; 1
 486:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
			lcd_cmd(0xC7); 
 48a:	87 ec       	ldi	r24, 0xC7	; 199
 48c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
			lcd_msg(" Graus");
 490:	8f e0       	ldi	r24, 0x0F	; 15
 492:	91 e0       	ldi	r25, 0x01	; 1
 494:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
			if(temp<36 || temp>38){
 498:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 49c:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 4a0:	84 97       	sbiw	r24, 0x24	; 36
 4a2:	03 97       	sbiw	r24, 0x03	; 3
 4a4:	38 f0       	brcs	.+14     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
				OCR1A = 49152; // gera pwm com duty=75%, 49152/65536;
 4a6:	80 e0       	ldi	r24, 0x00	; 0
 4a8:	90 ec       	ldi	r25, 0xC0	; 192
 4aa:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 4ae:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 4b2:	06 c0       	rjmp	.+12     	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
			}else
				OCR1A=16384; // duty=25%
 4b4:	80 e0       	ldi	r24, 0x00	; 0
 4b6:	90 e4       	ldi	r25, 0x40	; 64
 4b8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 4bc:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
		}
		
	   if(off==1){
 4c0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 4c4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 4c8:	01 97       	sbiw	r24, 0x01	; 1
 4ca:	09 f0       	breq	.+2      	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 4cc:	bf cf       	rjmp	.-130    	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
		   
		    OCR1A = 0; // desativa o pwm
 4ce:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 4d2:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
			ACSR = 1<<ACD; // desliga alimentação do comparador
 4d6:	80 e8       	ldi	r24, 0x80	; 128
 4d8:	80 bf       	out	0x30, r24	; 48
		    clr_bit(PORTB,LED); // desliga o LED
 4da:	85 b1       	in	r24, 0x05	; 5
 4dc:	8e 7f       	andi	r24, 0xFE	; 254
 4de:	85 b9       	out	0x05, r24	; 5
			lcd_cmd(0x01); // limpa display
 4e0:	81 e0       	ldi	r24, 0x01	; 1
 4e2:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 4e6:	b2 cf       	rjmp	.-156    	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>

000004e8 <__vector_23>:
}

//Interrupção do Comparador Analógico

ISR(ANALOG_COMP_vect)//O LED vai acender quando o ambiente tiver com pouca luminosidade (tensão maior no terminal positivo do comparador)
{ 
 4e8:	1f 92       	push	r1
 4ea:	0f 92       	push	r0
 4ec:	0f b6       	in	r0, 0x3f	; 63
 4ee:	0f 92       	push	r0
 4f0:	11 24       	eor	r1, r1
 4f2:	8f 93       	push	r24
	if(tst_bit(ACSR,ACO))//verifica a mudança ocorrida na saída do comparador
 4f4:	00 b6       	in	r0, 0x30	; 48
 4f6:	05 fe       	sbrs	r0, 5
 4f8:	04 c0       	rjmp	.+8      	; 0x502 <__vector_23+0x1a>
	set_bit(PORTB,LED);
 4fa:	85 b1       	in	r24, 0x05	; 5
 4fc:	81 60       	ori	r24, 0x01	; 1
 4fe:	85 b9       	out	0x05, r24	; 5
 500:	03 c0       	rjmp	.+6      	; 0x508 <__vector_23+0x20>
	else
	clr_bit(PORTB,LED);
 502:	85 b1       	in	r24, 0x05	; 5
 504:	8e 7f       	andi	r24, 0xFE	; 254
 506:	85 b9       	out	0x05, r24	; 5
}
 508:	8f 91       	pop	r24
 50a:	0f 90       	pop	r0
 50c:	0f be       	out	0x3f, r0	; 63
 50e:	0f 90       	pop	r0
 510:	1f 90       	pop	r1
 512:	18 95       	reti

00000514 <__vector_21>:


ISR(ADC_vect)
{
 514:	1f 92       	push	r1
 516:	0f 92       	push	r0
 518:	0f b6       	in	r0, 0x3f	; 63
 51a:	0f 92       	push	r0
 51c:	11 24       	eor	r1, r1
 51e:	2f 93       	push	r18
 520:	3f 93       	push	r19
 522:	4f 93       	push	r20
 524:	5f 93       	push	r21
 526:	6f 93       	push	r22
 528:	7f 93       	push	r23
 52a:	8f 93       	push	r24
 52c:	9f 93       	push	r25
 52e:	af 93       	push	r26
 530:	bf 93       	push	r27
 532:	ef 93       	push	r30
 534:	ff 93       	push	r31
	temp=ADC;
 536:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 53a:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
	temp = (temp/100000.0)*1465.0+30;
 53e:	80 e0       	ldi	r24, 0x00	; 0
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	0e 94 da 03 	call	0x7b4	; 0x7b4 <__floatunsisf>
 546:	20 e0       	ldi	r18, 0x00	; 0
 548:	30 e5       	ldi	r19, 0x50	; 80
 54a:	43 ec       	ldi	r20, 0xC3	; 195
 54c:	57 e4       	ldi	r21, 0x47	; 71
 54e:	0e 94 39 03 	call	0x672	; 0x672 <__divsf3>
 552:	20 e0       	ldi	r18, 0x00	; 0
 554:	30 e2       	ldi	r19, 0x20	; 32
 556:	47 eb       	ldi	r20, 0xB7	; 183
 558:	54 e4       	ldi	r21, 0x44	; 68
 55a:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__mulsf3>
 55e:	20 e0       	ldi	r18, 0x00	; 0
 560:	30 e0       	ldi	r19, 0x00	; 0
 562:	40 ef       	ldi	r20, 0xF0	; 240
 564:	51 e4       	ldi	r21, 0x41	; 65
 566:	0e 94 cd 02 	call	0x59a	; 0x59a <__addsf3>
 56a:	0e 94 ab 03 	call	0x756	; 0x756 <__fixunssfsi>
 56e:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <__data_end+0x1>
 572:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <__data_end>
	 // tempetura tem uma faixa de 30 a 45 graus celsius
	//O valor de leitura do ADC é dado por ADC = Vin*1024/Vref, com Vref = 1,1V -> ADC=Vin*930.9090909
	
}
 576:	ff 91       	pop	r31
 578:	ef 91       	pop	r30
 57a:	bf 91       	pop	r27
 57c:	af 91       	pop	r26
 57e:	9f 91       	pop	r25
 580:	8f 91       	pop	r24
 582:	7f 91       	pop	r23
 584:	6f 91       	pop	r22
 586:	5f 91       	pop	r21
 588:	4f 91       	pop	r20
 58a:	3f 91       	pop	r19
 58c:	2f 91       	pop	r18
 58e:	0f 90       	pop	r0
 590:	0f be       	out	0x3f, r0	; 63
 592:	0f 90       	pop	r0
 594:	1f 90       	pop	r1
 596:	18 95       	reti

00000598 <__subsf3>:
 598:	50 58       	subi	r21, 0x80	; 128

0000059a <__addsf3>:
 59a:	bb 27       	eor	r27, r27
 59c:	aa 27       	eor	r26, r26
 59e:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__addsf3x>
 5a2:	0c 94 2e 04 	jmp	0x85c	; 0x85c <__fp_round>
 5a6:	0e 94 20 04 	call	0x840	; 0x840 <__fp_pscA>
 5aa:	38 f0       	brcs	.+14     	; 0x5ba <__addsf3+0x20>
 5ac:	0e 94 27 04 	call	0x84e	; 0x84e <__fp_pscB>
 5b0:	20 f0       	brcs	.+8      	; 0x5ba <__addsf3+0x20>
 5b2:	39 f4       	brne	.+14     	; 0x5c2 <__addsf3+0x28>
 5b4:	9f 3f       	cpi	r25, 0xFF	; 255
 5b6:	19 f4       	brne	.+6      	; 0x5be <__addsf3+0x24>
 5b8:	26 f4       	brtc	.+8      	; 0x5c2 <__addsf3+0x28>
 5ba:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__fp_nan>
 5be:	0e f4       	brtc	.+2      	; 0x5c2 <__addsf3+0x28>
 5c0:	e0 95       	com	r30
 5c2:	e7 fb       	bst	r30, 7
 5c4:	0c 94 17 04 	jmp	0x82e	; 0x82e <__fp_inf>

000005c8 <__addsf3x>:
 5c8:	e9 2f       	mov	r30, r25
 5ca:	0e 94 3f 04 	call	0x87e	; 0x87e <__fp_split3>
 5ce:	58 f3       	brcs	.-42     	; 0x5a6 <__addsf3+0xc>
 5d0:	ba 17       	cp	r27, r26
 5d2:	62 07       	cpc	r22, r18
 5d4:	73 07       	cpc	r23, r19
 5d6:	84 07       	cpc	r24, r20
 5d8:	95 07       	cpc	r25, r21
 5da:	20 f0       	brcs	.+8      	; 0x5e4 <__addsf3x+0x1c>
 5dc:	79 f4       	brne	.+30     	; 0x5fc <__addsf3x+0x34>
 5de:	a6 f5       	brtc	.+104    	; 0x648 <__addsf3x+0x80>
 5e0:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__fp_zero>
 5e4:	0e f4       	brtc	.+2      	; 0x5e8 <__addsf3x+0x20>
 5e6:	e0 95       	com	r30
 5e8:	0b 2e       	mov	r0, r27
 5ea:	ba 2f       	mov	r27, r26
 5ec:	a0 2d       	mov	r26, r0
 5ee:	0b 01       	movw	r0, r22
 5f0:	b9 01       	movw	r22, r18
 5f2:	90 01       	movw	r18, r0
 5f4:	0c 01       	movw	r0, r24
 5f6:	ca 01       	movw	r24, r20
 5f8:	a0 01       	movw	r20, r0
 5fa:	11 24       	eor	r1, r1
 5fc:	ff 27       	eor	r31, r31
 5fe:	59 1b       	sub	r21, r25
 600:	99 f0       	breq	.+38     	; 0x628 <__addsf3x+0x60>
 602:	59 3f       	cpi	r21, 0xF9	; 249
 604:	50 f4       	brcc	.+20     	; 0x61a <__addsf3x+0x52>
 606:	50 3e       	cpi	r21, 0xE0	; 224
 608:	68 f1       	brcs	.+90     	; 0x664 <__addsf3x+0x9c>
 60a:	1a 16       	cp	r1, r26
 60c:	f0 40       	sbci	r31, 0x00	; 0
 60e:	a2 2f       	mov	r26, r18
 610:	23 2f       	mov	r18, r19
 612:	34 2f       	mov	r19, r20
 614:	44 27       	eor	r20, r20
 616:	58 5f       	subi	r21, 0xF8	; 248
 618:	f3 cf       	rjmp	.-26     	; 0x600 <__addsf3x+0x38>
 61a:	46 95       	lsr	r20
 61c:	37 95       	ror	r19
 61e:	27 95       	ror	r18
 620:	a7 95       	ror	r26
 622:	f0 40       	sbci	r31, 0x00	; 0
 624:	53 95       	inc	r21
 626:	c9 f7       	brne	.-14     	; 0x61a <__addsf3x+0x52>
 628:	7e f4       	brtc	.+30     	; 0x648 <__addsf3x+0x80>
 62a:	1f 16       	cp	r1, r31
 62c:	ba 0b       	sbc	r27, r26
 62e:	62 0b       	sbc	r22, r18
 630:	73 0b       	sbc	r23, r19
 632:	84 0b       	sbc	r24, r20
 634:	ba f0       	brmi	.+46     	; 0x664 <__addsf3x+0x9c>
 636:	91 50       	subi	r25, 0x01	; 1
 638:	a1 f0       	breq	.+40     	; 0x662 <__addsf3x+0x9a>
 63a:	ff 0f       	add	r31, r31
 63c:	bb 1f       	adc	r27, r27
 63e:	66 1f       	adc	r22, r22
 640:	77 1f       	adc	r23, r23
 642:	88 1f       	adc	r24, r24
 644:	c2 f7       	brpl	.-16     	; 0x636 <__addsf3x+0x6e>
 646:	0e c0       	rjmp	.+28     	; 0x664 <__addsf3x+0x9c>
 648:	ba 0f       	add	r27, r26
 64a:	62 1f       	adc	r22, r18
 64c:	73 1f       	adc	r23, r19
 64e:	84 1f       	adc	r24, r20
 650:	48 f4       	brcc	.+18     	; 0x664 <__addsf3x+0x9c>
 652:	87 95       	ror	r24
 654:	77 95       	ror	r23
 656:	67 95       	ror	r22
 658:	b7 95       	ror	r27
 65a:	f7 95       	ror	r31
 65c:	9e 3f       	cpi	r25, 0xFE	; 254
 65e:	08 f0       	brcs	.+2      	; 0x662 <__addsf3x+0x9a>
 660:	b0 cf       	rjmp	.-160    	; 0x5c2 <__addsf3+0x28>
 662:	93 95       	inc	r25
 664:	88 0f       	add	r24, r24
 666:	08 f0       	brcs	.+2      	; 0x66a <__addsf3x+0xa2>
 668:	99 27       	eor	r25, r25
 66a:	ee 0f       	add	r30, r30
 66c:	97 95       	ror	r25
 66e:	87 95       	ror	r24
 670:	08 95       	ret

00000672 <__divsf3>:
 672:	0e 94 4d 03 	call	0x69a	; 0x69a <__divsf3x>
 676:	0c 94 2e 04 	jmp	0x85c	; 0x85c <__fp_round>
 67a:	0e 94 27 04 	call	0x84e	; 0x84e <__fp_pscB>
 67e:	58 f0       	brcs	.+22     	; 0x696 <__divsf3+0x24>
 680:	0e 94 20 04 	call	0x840	; 0x840 <__fp_pscA>
 684:	40 f0       	brcs	.+16     	; 0x696 <__divsf3+0x24>
 686:	29 f4       	brne	.+10     	; 0x692 <__divsf3+0x20>
 688:	5f 3f       	cpi	r21, 0xFF	; 255
 68a:	29 f0       	breq	.+10     	; 0x696 <__divsf3+0x24>
 68c:	0c 94 17 04 	jmp	0x82e	; 0x82e <__fp_inf>
 690:	51 11       	cpse	r21, r1
 692:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__fp_szero>
 696:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__fp_nan>

0000069a <__divsf3x>:
 69a:	0e 94 3f 04 	call	0x87e	; 0x87e <__fp_split3>
 69e:	68 f3       	brcs	.-38     	; 0x67a <__divsf3+0x8>

000006a0 <__divsf3_pse>:
 6a0:	99 23       	and	r25, r25
 6a2:	b1 f3       	breq	.-20     	; 0x690 <__divsf3+0x1e>
 6a4:	55 23       	and	r21, r21
 6a6:	91 f3       	breq	.-28     	; 0x68c <__divsf3+0x1a>
 6a8:	95 1b       	sub	r25, r21
 6aa:	55 0b       	sbc	r21, r21
 6ac:	bb 27       	eor	r27, r27
 6ae:	aa 27       	eor	r26, r26
 6b0:	62 17       	cp	r22, r18
 6b2:	73 07       	cpc	r23, r19
 6b4:	84 07       	cpc	r24, r20
 6b6:	38 f0       	brcs	.+14     	; 0x6c6 <__divsf3_pse+0x26>
 6b8:	9f 5f       	subi	r25, 0xFF	; 255
 6ba:	5f 4f       	sbci	r21, 0xFF	; 255
 6bc:	22 0f       	add	r18, r18
 6be:	33 1f       	adc	r19, r19
 6c0:	44 1f       	adc	r20, r20
 6c2:	aa 1f       	adc	r26, r26
 6c4:	a9 f3       	breq	.-22     	; 0x6b0 <__divsf3_pse+0x10>
 6c6:	35 d0       	rcall	.+106    	; 0x732 <__divsf3_pse+0x92>
 6c8:	0e 2e       	mov	r0, r30
 6ca:	3a f0       	brmi	.+14     	; 0x6da <__divsf3_pse+0x3a>
 6cc:	e0 e8       	ldi	r30, 0x80	; 128
 6ce:	32 d0       	rcall	.+100    	; 0x734 <__divsf3_pse+0x94>
 6d0:	91 50       	subi	r25, 0x01	; 1
 6d2:	50 40       	sbci	r21, 0x00	; 0
 6d4:	e6 95       	lsr	r30
 6d6:	00 1c       	adc	r0, r0
 6d8:	ca f7       	brpl	.-14     	; 0x6cc <__divsf3_pse+0x2c>
 6da:	2b d0       	rcall	.+86     	; 0x732 <__divsf3_pse+0x92>
 6dc:	fe 2f       	mov	r31, r30
 6de:	29 d0       	rcall	.+82     	; 0x732 <__divsf3_pse+0x92>
 6e0:	66 0f       	add	r22, r22
 6e2:	77 1f       	adc	r23, r23
 6e4:	88 1f       	adc	r24, r24
 6e6:	bb 1f       	adc	r27, r27
 6e8:	26 17       	cp	r18, r22
 6ea:	37 07       	cpc	r19, r23
 6ec:	48 07       	cpc	r20, r24
 6ee:	ab 07       	cpc	r26, r27
 6f0:	b0 e8       	ldi	r27, 0x80	; 128
 6f2:	09 f0       	breq	.+2      	; 0x6f6 <__divsf3_pse+0x56>
 6f4:	bb 0b       	sbc	r27, r27
 6f6:	80 2d       	mov	r24, r0
 6f8:	bf 01       	movw	r22, r30
 6fa:	ff 27       	eor	r31, r31
 6fc:	93 58       	subi	r25, 0x83	; 131
 6fe:	5f 4f       	sbci	r21, 0xFF	; 255
 700:	3a f0       	brmi	.+14     	; 0x710 <__divsf3_pse+0x70>
 702:	9e 3f       	cpi	r25, 0xFE	; 254
 704:	51 05       	cpc	r21, r1
 706:	78 f0       	brcs	.+30     	; 0x726 <__divsf3_pse+0x86>
 708:	0c 94 17 04 	jmp	0x82e	; 0x82e <__fp_inf>
 70c:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__fp_szero>
 710:	5f 3f       	cpi	r21, 0xFF	; 255
 712:	e4 f3       	brlt	.-8      	; 0x70c <__divsf3_pse+0x6c>
 714:	98 3e       	cpi	r25, 0xE8	; 232
 716:	d4 f3       	brlt	.-12     	; 0x70c <__divsf3_pse+0x6c>
 718:	86 95       	lsr	r24
 71a:	77 95       	ror	r23
 71c:	67 95       	ror	r22
 71e:	b7 95       	ror	r27
 720:	f7 95       	ror	r31
 722:	9f 5f       	subi	r25, 0xFF	; 255
 724:	c9 f7       	brne	.-14     	; 0x718 <__divsf3_pse+0x78>
 726:	88 0f       	add	r24, r24
 728:	91 1d       	adc	r25, r1
 72a:	96 95       	lsr	r25
 72c:	87 95       	ror	r24
 72e:	97 f9       	bld	r25, 7
 730:	08 95       	ret
 732:	e1 e0       	ldi	r30, 0x01	; 1
 734:	66 0f       	add	r22, r22
 736:	77 1f       	adc	r23, r23
 738:	88 1f       	adc	r24, r24
 73a:	bb 1f       	adc	r27, r27
 73c:	62 17       	cp	r22, r18
 73e:	73 07       	cpc	r23, r19
 740:	84 07       	cpc	r24, r20
 742:	ba 07       	cpc	r27, r26
 744:	20 f0       	brcs	.+8      	; 0x74e <__divsf3_pse+0xae>
 746:	62 1b       	sub	r22, r18
 748:	73 0b       	sbc	r23, r19
 74a:	84 0b       	sbc	r24, r20
 74c:	ba 0b       	sbc	r27, r26
 74e:	ee 1f       	adc	r30, r30
 750:	88 f7       	brcc	.-30     	; 0x734 <__divsf3_pse+0x94>
 752:	e0 95       	com	r30
 754:	08 95       	ret

00000756 <__fixunssfsi>:
 756:	0e 94 47 04 	call	0x88e	; 0x88e <__fp_splitA>
 75a:	88 f0       	brcs	.+34     	; 0x77e <__fixunssfsi+0x28>
 75c:	9f 57       	subi	r25, 0x7F	; 127
 75e:	98 f0       	brcs	.+38     	; 0x786 <__fixunssfsi+0x30>
 760:	b9 2f       	mov	r27, r25
 762:	99 27       	eor	r25, r25
 764:	b7 51       	subi	r27, 0x17	; 23
 766:	b0 f0       	brcs	.+44     	; 0x794 <__fixunssfsi+0x3e>
 768:	e1 f0       	breq	.+56     	; 0x7a2 <__fixunssfsi+0x4c>
 76a:	66 0f       	add	r22, r22
 76c:	77 1f       	adc	r23, r23
 76e:	88 1f       	adc	r24, r24
 770:	99 1f       	adc	r25, r25
 772:	1a f0       	brmi	.+6      	; 0x77a <__fixunssfsi+0x24>
 774:	ba 95       	dec	r27
 776:	c9 f7       	brne	.-14     	; 0x76a <__fixunssfsi+0x14>
 778:	14 c0       	rjmp	.+40     	; 0x7a2 <__fixunssfsi+0x4c>
 77a:	b1 30       	cpi	r27, 0x01	; 1
 77c:	91 f0       	breq	.+36     	; 0x7a2 <__fixunssfsi+0x4c>
 77e:	0e 94 61 04 	call	0x8c2	; 0x8c2 <__fp_zero>
 782:	b1 e0       	ldi	r27, 0x01	; 1
 784:	08 95       	ret
 786:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__fp_zero>
 78a:	67 2f       	mov	r22, r23
 78c:	78 2f       	mov	r23, r24
 78e:	88 27       	eor	r24, r24
 790:	b8 5f       	subi	r27, 0xF8	; 248
 792:	39 f0       	breq	.+14     	; 0x7a2 <__fixunssfsi+0x4c>
 794:	b9 3f       	cpi	r27, 0xF9	; 249
 796:	cc f3       	brlt	.-14     	; 0x78a <__fixunssfsi+0x34>
 798:	86 95       	lsr	r24
 79a:	77 95       	ror	r23
 79c:	67 95       	ror	r22
 79e:	b3 95       	inc	r27
 7a0:	d9 f7       	brne	.-10     	; 0x798 <__fixunssfsi+0x42>
 7a2:	3e f4       	brtc	.+14     	; 0x7b2 <__fixunssfsi+0x5c>
 7a4:	90 95       	com	r25
 7a6:	80 95       	com	r24
 7a8:	70 95       	com	r23
 7aa:	61 95       	neg	r22
 7ac:	7f 4f       	sbci	r23, 0xFF	; 255
 7ae:	8f 4f       	sbci	r24, 0xFF	; 255
 7b0:	9f 4f       	sbci	r25, 0xFF	; 255
 7b2:	08 95       	ret

000007b4 <__floatunsisf>:
 7b4:	e8 94       	clt
 7b6:	09 c0       	rjmp	.+18     	; 0x7ca <__floatsisf+0x12>

000007b8 <__floatsisf>:
 7b8:	97 fb       	bst	r25, 7
 7ba:	3e f4       	brtc	.+14     	; 0x7ca <__floatsisf+0x12>
 7bc:	90 95       	com	r25
 7be:	80 95       	com	r24
 7c0:	70 95       	com	r23
 7c2:	61 95       	neg	r22
 7c4:	7f 4f       	sbci	r23, 0xFF	; 255
 7c6:	8f 4f       	sbci	r24, 0xFF	; 255
 7c8:	9f 4f       	sbci	r25, 0xFF	; 255
 7ca:	99 23       	and	r25, r25
 7cc:	a9 f0       	breq	.+42     	; 0x7f8 <__floatsisf+0x40>
 7ce:	f9 2f       	mov	r31, r25
 7d0:	96 e9       	ldi	r25, 0x96	; 150
 7d2:	bb 27       	eor	r27, r27
 7d4:	93 95       	inc	r25
 7d6:	f6 95       	lsr	r31
 7d8:	87 95       	ror	r24
 7da:	77 95       	ror	r23
 7dc:	67 95       	ror	r22
 7de:	b7 95       	ror	r27
 7e0:	f1 11       	cpse	r31, r1
 7e2:	f8 cf       	rjmp	.-16     	; 0x7d4 <__floatsisf+0x1c>
 7e4:	fa f4       	brpl	.+62     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 7e6:	bb 0f       	add	r27, r27
 7e8:	11 f4       	brne	.+4      	; 0x7ee <__floatsisf+0x36>
 7ea:	60 ff       	sbrs	r22, 0
 7ec:	1b c0       	rjmp	.+54     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 7ee:	6f 5f       	subi	r22, 0xFF	; 255
 7f0:	7f 4f       	sbci	r23, 0xFF	; 255
 7f2:	8f 4f       	sbci	r24, 0xFF	; 255
 7f4:	9f 4f       	sbci	r25, 0xFF	; 255
 7f6:	16 c0       	rjmp	.+44     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 7f8:	88 23       	and	r24, r24
 7fa:	11 f0       	breq	.+4      	; 0x800 <__DATA_REGION_LENGTH__>
 7fc:	96 e9       	ldi	r25, 0x96	; 150
 7fe:	11 c0       	rjmp	.+34     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 800:	77 23       	and	r23, r23
 802:	21 f0       	breq	.+8      	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 804:	9e e8       	ldi	r25, 0x8E	; 142
 806:	87 2f       	mov	r24, r23
 808:	76 2f       	mov	r23, r22
 80a:	05 c0       	rjmp	.+10     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 80c:	66 23       	and	r22, r22
 80e:	71 f0       	breq	.+28     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
 810:	96 e8       	ldi	r25, 0x86	; 134
 812:	86 2f       	mov	r24, r22
 814:	70 e0       	ldi	r23, 0x00	; 0
 816:	60 e0       	ldi	r22, 0x00	; 0
 818:	2a f0       	brmi	.+10     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 81a:	9a 95       	dec	r25
 81c:	66 0f       	add	r22, r22
 81e:	77 1f       	adc	r23, r23
 820:	88 1f       	adc	r24, r24
 822:	da f7       	brpl	.-10     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 824:	88 0f       	add	r24, r24
 826:	96 95       	lsr	r25
 828:	87 95       	ror	r24
 82a:	97 f9       	bld	r25, 7
 82c:	08 95       	ret

0000082e <__fp_inf>:
 82e:	97 f9       	bld	r25, 7
 830:	9f 67       	ori	r25, 0x7F	; 127
 832:	80 e8       	ldi	r24, 0x80	; 128
 834:	70 e0       	ldi	r23, 0x00	; 0
 836:	60 e0       	ldi	r22, 0x00	; 0
 838:	08 95       	ret

0000083a <__fp_nan>:
 83a:	9f ef       	ldi	r25, 0xFF	; 255
 83c:	80 ec       	ldi	r24, 0xC0	; 192
 83e:	08 95       	ret

00000840 <__fp_pscA>:
 840:	00 24       	eor	r0, r0
 842:	0a 94       	dec	r0
 844:	16 16       	cp	r1, r22
 846:	17 06       	cpc	r1, r23
 848:	18 06       	cpc	r1, r24
 84a:	09 06       	cpc	r0, r25
 84c:	08 95       	ret

0000084e <__fp_pscB>:
 84e:	00 24       	eor	r0, r0
 850:	0a 94       	dec	r0
 852:	12 16       	cp	r1, r18
 854:	13 06       	cpc	r1, r19
 856:	14 06       	cpc	r1, r20
 858:	05 06       	cpc	r0, r21
 85a:	08 95       	ret

0000085c <__fp_round>:
 85c:	09 2e       	mov	r0, r25
 85e:	03 94       	inc	r0
 860:	00 0c       	add	r0, r0
 862:	11 f4       	brne	.+4      	; 0x868 <__fp_round+0xc>
 864:	88 23       	and	r24, r24
 866:	52 f0       	brmi	.+20     	; 0x87c <__fp_round+0x20>
 868:	bb 0f       	add	r27, r27
 86a:	40 f4       	brcc	.+16     	; 0x87c <__fp_round+0x20>
 86c:	bf 2b       	or	r27, r31
 86e:	11 f4       	brne	.+4      	; 0x874 <__fp_round+0x18>
 870:	60 ff       	sbrs	r22, 0
 872:	04 c0       	rjmp	.+8      	; 0x87c <__fp_round+0x20>
 874:	6f 5f       	subi	r22, 0xFF	; 255
 876:	7f 4f       	sbci	r23, 0xFF	; 255
 878:	8f 4f       	sbci	r24, 0xFF	; 255
 87a:	9f 4f       	sbci	r25, 0xFF	; 255
 87c:	08 95       	ret

0000087e <__fp_split3>:
 87e:	57 fd       	sbrc	r21, 7
 880:	90 58       	subi	r25, 0x80	; 128
 882:	44 0f       	add	r20, r20
 884:	55 1f       	adc	r21, r21
 886:	59 f0       	breq	.+22     	; 0x89e <__fp_splitA+0x10>
 888:	5f 3f       	cpi	r21, 0xFF	; 255
 88a:	71 f0       	breq	.+28     	; 0x8a8 <__fp_splitA+0x1a>
 88c:	47 95       	ror	r20

0000088e <__fp_splitA>:
 88e:	88 0f       	add	r24, r24
 890:	97 fb       	bst	r25, 7
 892:	99 1f       	adc	r25, r25
 894:	61 f0       	breq	.+24     	; 0x8ae <__fp_splitA+0x20>
 896:	9f 3f       	cpi	r25, 0xFF	; 255
 898:	79 f0       	breq	.+30     	; 0x8b8 <__fp_splitA+0x2a>
 89a:	87 95       	ror	r24
 89c:	08 95       	ret
 89e:	12 16       	cp	r1, r18
 8a0:	13 06       	cpc	r1, r19
 8a2:	14 06       	cpc	r1, r20
 8a4:	55 1f       	adc	r21, r21
 8a6:	f2 cf       	rjmp	.-28     	; 0x88c <__fp_split3+0xe>
 8a8:	46 95       	lsr	r20
 8aa:	f1 df       	rcall	.-30     	; 0x88e <__fp_splitA>
 8ac:	08 c0       	rjmp	.+16     	; 0x8be <__fp_splitA+0x30>
 8ae:	16 16       	cp	r1, r22
 8b0:	17 06       	cpc	r1, r23
 8b2:	18 06       	cpc	r1, r24
 8b4:	99 1f       	adc	r25, r25
 8b6:	f1 cf       	rjmp	.-30     	; 0x89a <__fp_splitA+0xc>
 8b8:	86 95       	lsr	r24
 8ba:	71 05       	cpc	r23, r1
 8bc:	61 05       	cpc	r22, r1
 8be:	08 94       	sec
 8c0:	08 95       	ret

000008c2 <__fp_zero>:
 8c2:	e8 94       	clt

000008c4 <__fp_szero>:
 8c4:	bb 27       	eor	r27, r27
 8c6:	66 27       	eor	r22, r22
 8c8:	77 27       	eor	r23, r23
 8ca:	cb 01       	movw	r24, r22
 8cc:	97 f9       	bld	r25, 7
 8ce:	08 95       	ret

000008d0 <__mulsf3>:
 8d0:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <__mulsf3x>
 8d4:	0c 94 2e 04 	jmp	0x85c	; 0x85c <__fp_round>
 8d8:	0e 94 20 04 	call	0x840	; 0x840 <__fp_pscA>
 8dc:	38 f0       	brcs	.+14     	; 0x8ec <__mulsf3+0x1c>
 8de:	0e 94 27 04 	call	0x84e	; 0x84e <__fp_pscB>
 8e2:	20 f0       	brcs	.+8      	; 0x8ec <__mulsf3+0x1c>
 8e4:	95 23       	and	r25, r21
 8e6:	11 f0       	breq	.+4      	; 0x8ec <__mulsf3+0x1c>
 8e8:	0c 94 17 04 	jmp	0x82e	; 0x82e <__fp_inf>
 8ec:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__fp_nan>
 8f0:	11 24       	eor	r1, r1
 8f2:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__fp_szero>

000008f6 <__mulsf3x>:
 8f6:	0e 94 3f 04 	call	0x87e	; 0x87e <__fp_split3>
 8fa:	70 f3       	brcs	.-36     	; 0x8d8 <__mulsf3+0x8>

000008fc <__mulsf3_pse>:
 8fc:	95 9f       	mul	r25, r21
 8fe:	c1 f3       	breq	.-16     	; 0x8f0 <__mulsf3+0x20>
 900:	95 0f       	add	r25, r21
 902:	50 e0       	ldi	r21, 0x00	; 0
 904:	55 1f       	adc	r21, r21
 906:	62 9f       	mul	r22, r18
 908:	f0 01       	movw	r30, r0
 90a:	72 9f       	mul	r23, r18
 90c:	bb 27       	eor	r27, r27
 90e:	f0 0d       	add	r31, r0
 910:	b1 1d       	adc	r27, r1
 912:	63 9f       	mul	r22, r19
 914:	aa 27       	eor	r26, r26
 916:	f0 0d       	add	r31, r0
 918:	b1 1d       	adc	r27, r1
 91a:	aa 1f       	adc	r26, r26
 91c:	64 9f       	mul	r22, r20
 91e:	66 27       	eor	r22, r22
 920:	b0 0d       	add	r27, r0
 922:	a1 1d       	adc	r26, r1
 924:	66 1f       	adc	r22, r22
 926:	82 9f       	mul	r24, r18
 928:	22 27       	eor	r18, r18
 92a:	b0 0d       	add	r27, r0
 92c:	a1 1d       	adc	r26, r1
 92e:	62 1f       	adc	r22, r18
 930:	73 9f       	mul	r23, r19
 932:	b0 0d       	add	r27, r0
 934:	a1 1d       	adc	r26, r1
 936:	62 1f       	adc	r22, r18
 938:	83 9f       	mul	r24, r19
 93a:	a0 0d       	add	r26, r0
 93c:	61 1d       	adc	r22, r1
 93e:	22 1f       	adc	r18, r18
 940:	74 9f       	mul	r23, r20
 942:	33 27       	eor	r19, r19
 944:	a0 0d       	add	r26, r0
 946:	61 1d       	adc	r22, r1
 948:	23 1f       	adc	r18, r19
 94a:	84 9f       	mul	r24, r20
 94c:	60 0d       	add	r22, r0
 94e:	21 1d       	adc	r18, r1
 950:	82 2f       	mov	r24, r18
 952:	76 2f       	mov	r23, r22
 954:	6a 2f       	mov	r22, r26
 956:	11 24       	eor	r1, r1
 958:	9f 57       	subi	r25, 0x7F	; 127
 95a:	50 40       	sbci	r21, 0x00	; 0
 95c:	9a f0       	brmi	.+38     	; 0x984 <__stack+0x85>
 95e:	f1 f0       	breq	.+60     	; 0x99c <__stack+0x9d>
 960:	88 23       	and	r24, r24
 962:	4a f0       	brmi	.+18     	; 0x976 <__stack+0x77>
 964:	ee 0f       	add	r30, r30
 966:	ff 1f       	adc	r31, r31
 968:	bb 1f       	adc	r27, r27
 96a:	66 1f       	adc	r22, r22
 96c:	77 1f       	adc	r23, r23
 96e:	88 1f       	adc	r24, r24
 970:	91 50       	subi	r25, 0x01	; 1
 972:	50 40       	sbci	r21, 0x00	; 0
 974:	a9 f7       	brne	.-22     	; 0x960 <__stack+0x61>
 976:	9e 3f       	cpi	r25, 0xFE	; 254
 978:	51 05       	cpc	r21, r1
 97a:	80 f0       	brcs	.+32     	; 0x99c <__stack+0x9d>
 97c:	0c 94 17 04 	jmp	0x82e	; 0x82e <__fp_inf>
 980:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__fp_szero>
 984:	5f 3f       	cpi	r21, 0xFF	; 255
 986:	e4 f3       	brlt	.-8      	; 0x980 <__stack+0x81>
 988:	98 3e       	cpi	r25, 0xE8	; 232
 98a:	d4 f3       	brlt	.-12     	; 0x980 <__stack+0x81>
 98c:	86 95       	lsr	r24
 98e:	77 95       	ror	r23
 990:	67 95       	ror	r22
 992:	b7 95       	ror	r27
 994:	f7 95       	ror	r31
 996:	e7 95       	ror	r30
 998:	9f 5f       	subi	r25, 0xFF	; 255
 99a:	c1 f7       	brne	.-16     	; 0x98c <__stack+0x8d>
 99c:	fe 2b       	or	r31, r30
 99e:	88 0f       	add	r24, r24
 9a0:	91 1d       	adc	r25, r1
 9a2:	96 95       	lsr	r25
 9a4:	87 95       	ror	r24
 9a6:	97 f9       	bld	r25, 7
 9a8:	08 95       	ret

000009aa <__umulhisi3>:
 9aa:	a2 9f       	mul	r26, r18
 9ac:	b0 01       	movw	r22, r0
 9ae:	b3 9f       	mul	r27, r19
 9b0:	c0 01       	movw	r24, r0
 9b2:	a3 9f       	mul	r26, r19
 9b4:	70 0d       	add	r23, r0
 9b6:	81 1d       	adc	r24, r1
 9b8:	11 24       	eor	r1, r1
 9ba:	91 1d       	adc	r25, r1
 9bc:	b2 9f       	mul	r27, r18
 9be:	70 0d       	add	r23, r0
 9c0:	81 1d       	adc	r24, r1
 9c2:	11 24       	eor	r1, r1
 9c4:	91 1d       	adc	r25, r1
 9c6:	08 95       	ret

000009c8 <_exit>:
 9c8:	f8 94       	cli

000009ca <__stop_program>:
 9ca:	ff cf       	rjmp	.-2      	; 0x9ca <__stop_program>
