
projetolab.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  000009bc  00000a50  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009bc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800116  00800116  00000a66  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a66  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b6c  00000000  00000000  00000b80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000756  00000000  00000000  000016ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008cc  00000000  00000000  00001e42  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c8  00000000  00000000  00002710  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00007178  00000000  00000000  000028d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000386  00000000  00000000  00009a50  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00009dd6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000293d  00000000  00000000  00009e6e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 82 02 	jmp	0x504	; 0x504 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 6c 02 	jmp	0x4d8	; 0x4d8 <__vector_23>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec eb       	ldi	r30, 0xBC	; 188
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 31       	cpi	r26, 0x16	; 22
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e1       	ldi	r26, 0x16	; 22
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 31       	cpi	r26, 0x1E	; 30
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <main>
  9e:	0c 94 dc 04 	jmp	0x9b8	; 0x9b8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <i2c_init>:
}

void lcd_lef_sh()
{
	lcd_cmd(0x18);      //Comando para deslocamento à esquerda
	delay(200);
  a6:	82 e6       	ldi	r24, 0x62	; 98
  a8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  ac:	84 e0       	ldi	r24, 0x04	; 4
  ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  b2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  b6:	08 95       	ret

000000b8 <i2c_start>:
  b8:	84 ea       	ldi	r24, 0xA4	; 164
  ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  be:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  c2:	88 23       	and	r24, r24
  c4:	e4 f7       	brge	.-8      	; 0xbe <i2c_start+0x6>
  c6:	08 95       	ret

000000c8 <i2c_write>:
  c8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  cc:	84 e8       	ldi	r24, 0x84	; 132
  ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  d2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  d6:	88 23       	and	r24, r24
  d8:	e4 f7       	brge	.-8      	; 0xd2 <i2c_write+0xa>
  da:	08 95       	ret

000000dc <delay>:
  dc:	40 e0       	ldi	r20, 0x00	; 0
  de:	50 e0       	ldi	r21, 0x00	; 0
  e0:	0a c0       	rjmp	.+20     	; 0xf6 <delay+0x1a>
  e2:	2f 5f       	subi	r18, 0xFF	; 255
  e4:	3f 4f       	sbci	r19, 0xFF	; 255
  e6:	02 c0       	rjmp	.+4      	; 0xec <delay+0x10>
  e8:	20 e0       	ldi	r18, 0x00	; 0
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	29 37       	cpi	r18, 0x79	; 121
  ee:	31 05       	cpc	r19, r1
  f0:	c4 f3       	brlt	.-16     	; 0xe2 <delay+0x6>
  f2:	4f 5f       	subi	r20, 0xFF	; 255
  f4:	5f 4f       	sbci	r21, 0xFF	; 255
  f6:	84 17       	cp	r24, r20
  f8:	95 07       	cpc	r25, r21
  fa:	b4 f7       	brge	.-20     	; 0xe8 <delay+0xc>
  fc:	08 95       	ret

000000fe <toggle>:
  fe:	eb eb       	ldi	r30, 0xBB	; 187
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	82 60       	ori	r24, 0x02	; 2
 106:	80 83       	st	Z, r24
 108:	84 e8       	ldi	r24, 0x84	; 132
 10a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 10e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 112:	88 23       	and	r24, r24
 114:	e4 f7       	brge	.-8      	; 0x10e <toggle+0x10>
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 6e 00 	call	0xdc	; 0xdc <delay>
 11e:	eb eb       	ldi	r30, 0xBB	; 187
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	8d 7f       	andi	r24, 0xFD	; 253
 126:	80 83       	st	Z, r24
 128:	84 e8       	ldi	r24, 0x84	; 132
 12a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 12e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 132:	88 23       	and	r24, r24
 134:	e4 f7       	brge	.-8      	; 0x12e <toggle+0x30>
 136:	08 95       	ret

00000138 <lcd_cmd_hf>:
 138:	eb eb       	ldi	r30, 0xBB	; 187
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	90 81       	ld	r25, Z
 13e:	9e 7f       	andi	r25, 0xFE	; 254
 140:	90 83       	st	Z, r25
 142:	94 e8       	ldi	r25, 0x84	; 132
 144:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 148:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 14c:	99 23       	and	r25, r25
 14e:	e4 f7       	brge	.-8      	; 0x148 <lcd_cmd_hf+0x10>
 150:	eb eb       	ldi	r30, 0xBB	; 187
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	90 81       	ld	r25, Z
 156:	9f 70       	andi	r25, 0x0F	; 15
 158:	90 83       	st	Z, r25
 15a:	94 e8       	ldi	r25, 0x84	; 132
 15c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 160:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 164:	99 23       	and	r25, r25
 166:	e4 f7       	brge	.-8      	; 0x160 <lcd_cmd_hf+0x28>
 168:	eb eb       	ldi	r30, 0xBB	; 187
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	90 81       	ld	r25, Z
 16e:	80 7f       	andi	r24, 0xF0	; 240
 170:	89 2b       	or	r24, r25
 172:	80 83       	st	Z, r24
 174:	84 e8       	ldi	r24, 0x84	; 132
 176:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17e:	88 23       	and	r24, r24
 180:	e4 f7       	brge	.-8      	; 0x17a <lcd_cmd_hf+0x42>
 182:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 186:	08 95       	ret

00000188 <lcd_cmd>:
 188:	cf 93       	push	r28
 18a:	c8 2f       	mov	r28, r24
 18c:	eb eb       	ldi	r30, 0xBB	; 187
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	80 81       	ld	r24, Z
 192:	8e 7f       	andi	r24, 0xFE	; 254
 194:	80 83       	st	Z, r24
 196:	84 e8       	ldi	r24, 0x84	; 132
 198:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 19c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1a0:	88 23       	and	r24, r24
 1a2:	e4 f7       	brge	.-8      	; 0x19c <lcd_cmd+0x14>
 1a4:	eb eb       	ldi	r30, 0xBB	; 187
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	80 81       	ld	r24, Z
 1aa:	8f 70       	andi	r24, 0x0F	; 15
 1ac:	80 83       	st	Z, r24
 1ae:	84 e8       	ldi	r24, 0x84	; 132
 1b0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1b4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1b8:	88 23       	and	r24, r24
 1ba:	e4 f7       	brge	.-8      	; 0x1b4 <lcd_cmd+0x2c>
 1bc:	eb eb       	ldi	r30, 0xBB	; 187
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	9c 2f       	mov	r25, r28
 1c4:	90 7f       	andi	r25, 0xF0	; 240
 1c6:	89 2b       	or	r24, r25
 1c8:	80 83       	st	Z, r24
 1ca:	84 e8       	ldi	r24, 0x84	; 132
 1cc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1d0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1d4:	88 23       	and	r24, r24
 1d6:	e4 f7       	brge	.-8      	; 0x1d0 <lcd_cmd+0x48>
 1d8:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 1dc:	eb eb       	ldi	r30, 0xBB	; 187
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	8f 70       	andi	r24, 0x0F	; 15
 1e4:	80 83       	st	Z, r24
 1e6:	84 e8       	ldi	r24, 0x84	; 132
 1e8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1ec:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1f0:	88 23       	and	r24, r24
 1f2:	e4 f7       	brge	.-8      	; 0x1ec <lcd_cmd+0x64>
 1f4:	eb eb       	ldi	r30, 0xBB	; 187
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	20 81       	ld	r18, Z
 1fa:	30 e1       	ldi	r19, 0x10	; 16
 1fc:	c3 9f       	mul	r28, r19
 1fe:	c0 01       	movw	r24, r0
 200:	11 24       	eor	r1, r1
 202:	82 2b       	or	r24, r18
 204:	80 83       	st	Z, r24
 206:	84 e8       	ldi	r24, 0x84	; 132
 208:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 20c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 210:	88 23       	and	r24, r24
 212:	e4 f7       	brge	.-8      	; 0x20c <lcd_cmd+0x84>
 214:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 218:	cf 91       	pop	r28
 21a:	08 95       	ret

0000021c <lcd_init>:
 21c:	80 e3       	ldi	r24, 0x30	; 48
 21e:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 222:	80 e3       	ldi	r24, 0x30	; 48
 224:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 228:	80 e2       	ldi	r24, 0x20	; 32
 22a:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_cmd_hf>
 22e:	88 e2       	ldi	r24, 0x28	; 40
 230:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 234:	8c e0       	ldi	r24, 0x0C	; 12
 236:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 240:	86 e0       	ldi	r24, 0x06	; 6
 242:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 246:	80 e8       	ldi	r24, 0x80	; 128
 248:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 24c:	08 95       	ret

0000024e <lcd_dwr>:
 24e:	cf 93       	push	r28
 250:	c8 2f       	mov	r28, r24
 252:	eb eb       	ldi	r30, 0xBB	; 187
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 81       	ld	r24, Z
 258:	81 60       	ori	r24, 0x01	; 1
 25a:	80 83       	st	Z, r24
 25c:	84 e8       	ldi	r24, 0x84	; 132
 25e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 262:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 266:	88 23       	and	r24, r24
 268:	e4 f7       	brge	.-8      	; 0x262 <lcd_dwr+0x14>
 26a:	eb eb       	ldi	r30, 0xBB	; 187
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	80 81       	ld	r24, Z
 270:	8f 70       	andi	r24, 0x0F	; 15
 272:	80 83       	st	Z, r24
 274:	84 e8       	ldi	r24, 0x84	; 132
 276:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 27a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 27e:	88 23       	and	r24, r24
 280:	e4 f7       	brge	.-8      	; 0x27a <lcd_dwr+0x2c>
 282:	eb eb       	ldi	r30, 0xBB	; 187
 284:	f0 e0       	ldi	r31, 0x00	; 0
 286:	80 81       	ld	r24, Z
 288:	9c 2f       	mov	r25, r28
 28a:	90 7f       	andi	r25, 0xF0	; 240
 28c:	89 2b       	or	r24, r25
 28e:	80 83       	st	Z, r24
 290:	84 e8       	ldi	r24, 0x84	; 132
 292:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 296:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 29a:	88 23       	and	r24, r24
 29c:	e4 f7       	brge	.-8      	; 0x296 <lcd_dwr+0x48>
 29e:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 2a2:	eb eb       	ldi	r30, 0xBB	; 187
 2a4:	f0 e0       	ldi	r31, 0x00	; 0
 2a6:	80 81       	ld	r24, Z
 2a8:	8f 70       	andi	r24, 0x0F	; 15
 2aa:	80 83       	st	Z, r24
 2ac:	84 e8       	ldi	r24, 0x84	; 132
 2ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2b2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2b6:	88 23       	and	r24, r24
 2b8:	e4 f7       	brge	.-8      	; 0x2b2 <lcd_dwr+0x64>
 2ba:	eb eb       	ldi	r30, 0xBB	; 187
 2bc:	f0 e0       	ldi	r31, 0x00	; 0
 2be:	20 81       	ld	r18, Z
 2c0:	30 e1       	ldi	r19, 0x10	; 16
 2c2:	c3 9f       	mul	r28, r19
 2c4:	c0 01       	movw	r24, r0
 2c6:	11 24       	eor	r1, r1
 2c8:	82 2b       	or	r24, r18
 2ca:	80 83       	st	Z, r24
 2cc:	84 e8       	ldi	r24, 0x84	; 132
 2ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2d2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2d6:	88 23       	and	r24, r24
 2d8:	e4 f7       	brge	.-8      	; 0x2d2 <lcd_dwr+0x84>
 2da:	0e 94 7f 00 	call	0xfe	; 0xfe <toggle>
 2de:	cf 91       	pop	r28
 2e0:	08 95       	ret

000002e2 <lcd_msg>:
 2e2:	cf 93       	push	r28
 2e4:	df 93       	push	r29
 2e6:	ec 01       	movw	r28, r24
 2e8:	03 c0       	rjmp	.+6      	; 0x2f0 <lcd_msg+0xe>
 2ea:	21 96       	adiw	r28, 0x01	; 1
 2ec:	0e 94 27 01 	call	0x24e	; 0x24e <lcd_dwr>
 2f0:	88 81       	ld	r24, Y
 2f2:	81 11       	cpse	r24, r1
 2f4:	fa cf       	rjmp	.-12     	; 0x2ea <lcd_msg+0x8>
 2f6:	df 91       	pop	r29
 2f8:	cf 91       	pop	r28
 2fa:	08 95       	ret

000002fc <__vector_1>:
int off=1,on=0;

unsigned char temp_string[tam_vetor];
uint16_t temp = 0;

ISR (INT0_vect){  // ON ou OFF
 2fc:	1f 92       	push	r1
 2fe:	0f 92       	push	r0
 300:	0f b6       	in	r0, 0x3f	; 63
 302:	0f 92       	push	r0
 304:	11 24       	eor	r1, r1
 306:	2f 93       	push	r18
 308:	3f 93       	push	r19
 30a:	8f 93       	push	r24
 30c:	9f 93       	push	r25
	
	on=!on;
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <on>
 316:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <on+0x1>
 31a:	23 2b       	or	r18, r19
 31c:	11 f0       	breq	.+4      	; 0x322 <__vector_1+0x26>
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <on+0x1>
 326:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <on>
	off=!off;
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 332:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 336:	23 2b       	or	r18, r19
 338:	11 f0       	breq	.+4      	; 0x33e <__vector_1+0x42>
 33a:	80 e0       	ldi	r24, 0x00	; 0
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 342:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	
}
 346:	9f 91       	pop	r25
 348:	8f 91       	pop	r24
 34a:	3f 91       	pop	r19
 34c:	2f 91       	pop	r18
 34e:	0f 90       	pop	r0
 350:	0f be       	out	0x3f, r0	; 63
 352:	0f 90       	pop	r0
 354:	1f 90       	pop	r1
 356:	18 95       	reti

00000358 <int2string>:


void int2string(unsigned int valor, unsigned char *disp)
{
 358:	ac 01       	movw	r20, r24

	for(uint8_t n=0; n<tam_vetor; n++)
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	06 c0       	rjmp	.+12     	; 0x36a <int2string+0x12>
	disp[n] = 0 + 48; //limpa vetor para armazenagem dos digitos
 35e:	fb 01       	movw	r30, r22
 360:	e8 0f       	add	r30, r24
 362:	f1 1d       	adc	r31, r1
 364:	90 e3       	ldi	r25, 0x30	; 48
 366:	90 83       	st	Z, r25


void int2string(unsigned int valor, unsigned char *disp)
{

	for(uint8_t n=0; n<tam_vetor; n++)
 368:	8f 5f       	subi	r24, 0xFF	; 255
 36a:	84 30       	cpi	r24, 0x04	; 4
 36c:	c0 f3       	brcs	.-16     	; 0x35e <int2string+0x6>
	disp[n] = 0 + 48; //limpa vetor para armazenagem dos digitos
	disp += (tam_vetor-1);
 36e:	fb 01       	movw	r30, r22
 370:	33 96       	adiw	r30, 0x03	; 3
	do
	{
		*disp = (valor%10) + 48; //pega o resto da divisão por 10
 372:	9a 01       	movw	r18, r20
 374:	ad ec       	ldi	r26, 0xCD	; 205
 376:	bc ec       	ldi	r27, 0xCC	; 204
 378:	0e 94 cd 04 	call	0x99a	; 0x99a <__umulhisi3>
 37c:	96 95       	lsr	r25
 37e:	87 95       	ror	r24
 380:	96 95       	lsr	r25
 382:	87 95       	ror	r24
 384:	96 95       	lsr	r25
 386:	87 95       	ror	r24
 388:	9c 01       	movw	r18, r24
 38a:	22 0f       	add	r18, r18
 38c:	33 1f       	adc	r19, r19
 38e:	88 0f       	add	r24, r24
 390:	99 1f       	adc	r25, r25
 392:	88 0f       	add	r24, r24
 394:	99 1f       	adc	r25, r25
 396:	88 0f       	add	r24, r24
 398:	99 1f       	adc	r25, r25
 39a:	82 0f       	add	r24, r18
 39c:	93 1f       	adc	r25, r19
 39e:	9a 01       	movw	r18, r20
 3a0:	28 1b       	sub	r18, r24
 3a2:	39 0b       	sbc	r19, r25
 3a4:	c9 01       	movw	r24, r18
 3a6:	80 5d       	subi	r24, 0xD0	; 208
 3a8:	80 83       	st	Z, r24
		valor /=10; //pega o inteiro da divisão por 10
 3aa:	9a 01       	movw	r18, r20
 3ac:	0e 94 cd 04 	call	0x99a	; 0x99a <__umulhisi3>
 3b0:	ac 01       	movw	r20, r24
 3b2:	56 95       	lsr	r21
 3b4:	47 95       	ror	r20
 3b6:	56 95       	lsr	r21
 3b8:	47 95       	ror	r20
 3ba:	56 95       	lsr	r21
 3bc:	47 95       	ror	r20
		disp--;
 3be:	31 97       	sbiw	r30, 0x01	; 1
	}while (valor!=0);
 3c0:	41 15       	cp	r20, r1
 3c2:	51 05       	cpc	r21, r1
 3c4:	b1 f6       	brne	.-84     	; 0x372 <int2string+0x1a>
	
	
}
 3c6:	08 95       	ret

000003c8 <main>:
int main()
{
	DDRB = 0x01; //pino do LED como saída
 3c8:	91 e0       	ldi	r25, 0x01	; 1
 3ca:	94 b9       	out	0x04, r25	; 4
	DDRB |= (1<<som); //habilita a saída de som
 3cc:	84 b1       	in	r24, 0x04	; 4
 3ce:	82 60       	ori	r24, 0x02	; 2
 3d0:	84 b9       	out	0x04, r24	; 4
	DDRC= 0X00; // PORTA C como entrada
 3d2:	17 b8       	out	0x07, r1	; 7
	DDRD = 0x00;//PORTA D(do comparador) como entrada 
 3d4:	1a b8       	out	0x0a, r1	; 10
	PORTC= 0XFE; // desabilita o pull-up do PC0
 3d6:	8e ef       	ldi	r24, 0xFE	; 254
 3d8:	88 b9       	out	0x08, r24	; 8
	PORTD = 0xFF; //habilita pull-ups
 3da:	2f ef       	ldi	r18, 0xFF	; 255
 3dc:	2b b9       	out	0x0b, r18	; 11
	PORTB = 0xFE; //apaga LED e habilita pull-ups
 3de:	85 b9       	out	0x05, r24	; 5
	// pwm

	ICR1 = 0xFFFF;
 3e0:	2f ef       	ldi	r18, 0xFF	; 255
 3e2:	3f ef       	ldi	r19, 0xFF	; 255
 3e4:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 3e8:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
	// seta TOP para 16bit

	OCR1A = 49152;
 3ec:	20 e0       	ldi	r18, 0x00	; 0
 3ee:	30 ec       	ldi	r19, 0xC0	; 192
 3f0:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 3f4:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	// seta PWM com 75% duty cycle ->  49152/65536 =75%


	TCCR1A |= (1 << COM1A1)|(1 << COM1B1);
 3f8:	e0 e8       	ldi	r30, 0x80	; 128
 3fa:	f0 e0       	ldi	r31, 0x00	; 0
 3fc:	80 81       	ld	r24, Z
 3fe:	80 6a       	ori	r24, 0xA0	; 160
 400:	80 83       	st	Z, r24
	// seta modo não invertido

	TCCR1A |= (1 << WGM11);
 402:	80 81       	ld	r24, Z
 404:	82 60       	ori	r24, 0x02	; 2
 406:	80 83       	st	Z, r24
	TCCR1B |= (1 << WGM12)|(1 << WGM13);
 408:	e1 e8       	ldi	r30, 0x81	; 129
 40a:	f0 e0       	ldi	r31, 0x00	; 0
 40c:	80 81       	ld	r24, Z
 40e:	88 61       	ori	r24, 0x18	; 24
 410:	80 83       	st	Z, r24
	// seta PWM no modo rápido usando ICR1 como TOP
	
	TCCR1B |= (1 << CS10);
 412:	80 81       	ld	r24, Z
 414:	81 60       	ori	r24, 0x01	; 1
 416:	80 83       	st	Z, r24
	// Inicia o timer1 sem prescaler
//-----------------------------------------------------------
	DIDR1 = 0b00000011; //desabilita as entradas digitais nos pinos AIN0 e AIN1
 418:	83 e0       	ldi	r24, 0x03	; 3
 41a:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <__TEXT_REGION_LENGTH__+0x7f807f>
	
	// Interrupções
	EICRA |= (1<<ISC01) | (0<<ISC00);
 41e:	e9 e6       	ldi	r30, 0x69	; 105
 420:	f0 e0       	ldi	r31, 0x00	; 0
 422:	80 81       	ld	r24, Z
 424:	82 60       	ori	r24, 0x02	; 2
 426:	80 83       	st	Z, r24
	EIMSK = (1<<INT0); //habilita a interrupção externa 0
 428:	9d bb       	out	0x1d, r25	; 29
	//Configuração do ADC
	ADMUX = 0b01000000; //Tensão interna de ref (1.1V), canal 0
 42a:	80 e4       	ldi	r24, 0x40	; 64
 42c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = 0b11101111; //Habilita o AD, habilita interrupção, modo de conversão contínua, prescaler = 128
 430:	8f ee       	ldi	r24, 0xEF	; 239
 432:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
	ADCSRB = 0x00; //Modo de conversão contínua
 436:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f807b>
	set_bit(DIDR0,0); //desabilita pino PC0 como I/0, entrada do ADC0
 43a:	ee e7       	ldi	r30, 0x7E	; 126
 43c:	f0 e0       	ldi	r31, 0x00	; 0
 43e:	80 81       	ld	r24, Z
 440:	81 60       	ori	r24, 0x01	; 1
 442:	80 83       	st	Z, r24
	
	sei(); //habilita a chave geral de interrupções
 444:	78 94       	sei
	
	i2c_init();
 446:	0e 94 53 00 	call	0xa6	; 0xa6 <i2c_init>
	i2c_start();
 44a:	0e 94 5c 00 	call	0xb8	; 0xb8 <i2c_start>
	i2c_write(0x70);
 44e:	80 e7       	ldi	r24, 0x70	; 112
 450:	0e 94 64 00 	call	0xc8	; 0xc8 <i2c_write>
	lcd_init();
 454:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_init>
	
	while(1){
		if(on==1){
 458:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <on>
 45c:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <on+0x1>
 460:	01 97       	sbiw	r24, 0x01	; 1
 462:	61 f5       	brne	.+88     	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
			
			ACSR = 1<<ACIE; //habilita interrupção por mudança de estado na saída do comparador
 464:	88 e0       	ldi	r24, 0x08	; 8
 466:	80 bf       	out	0x30, r24	; 48
			lcd_cmd(0x80);
 468:	80 e8       	ldi	r24, 0x80	; 128
 46a:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
			lcd_msg("Temperatura:");
 46e:	82 e0       	ldi	r24, 0x02	; 2
 470:	91 e0       	ldi	r25, 0x01	; 1
 472:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
			lcd_cmd(0xC3);
 476:	83 ec       	ldi	r24, 0xC3	; 195
 478:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
			int2string(temp,temp_string);
 47c:	6a e1       	ldi	r22, 0x1A	; 26
 47e:	71 e0       	ldi	r23, 0x01	; 1
 480:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 484:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 488:	0e 94 ac 01 	call	0x358	; 0x358 <int2string>
			lcd_msg(temp_string);
 48c:	8a e1       	ldi	r24, 0x1A	; 26
 48e:	91 e0       	ldi	r25, 0x01	; 1
 490:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
			lcd_cmd(0xC7); 
 494:	87 ec       	ldi	r24, 0xC7	; 199
 496:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
			lcd_msg(" Graus");
 49a:	8f e0       	ldi	r24, 0x0F	; 15
 49c:	91 e0       	ldi	r25, 0x01	; 1
 49e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_msg>
			if(temp<36 || temp>38)
 4a2:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 4a6:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 4aa:	84 97       	sbiw	r24, 0x24	; 36
 4ac:	03 97       	sbiw	r24, 0x03	; 3
 4ae:	30 f0       	brcs	.+12     	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
				OCR1A=16384; // duty=25%
 4b0:	80 e0       	ldi	r24, 0x00	; 0
 4b2:	90 e4       	ldi	r25, 0x40	; 64
 4b4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 4b8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
		}
		
	   if(off==1){
 4bc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 4c0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 4c4:	01 97       	sbiw	r24, 0x01	; 1
 4c6:	41 f6       	brne	.-112    	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
		     ACSR = 0<<ACIE; //desabilita interrupção por mudança de estado na saída do comparador
 4c8:	10 be       	out	0x30, r1	; 48
		    clr_bit(PORTB,LED); // desliga o LED
 4ca:	85 b1       	in	r24, 0x05	; 5
 4cc:	8e 7f       	andi	r24, 0xFE	; 254
 4ce:	85 b9       	out	0x05, r24	; 5
			lcd_cmd(0x01); // limpa display
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_cmd>
 4d6:	c0 cf       	rjmp	.-128    	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>

000004d8 <__vector_23>:
}

//Interrupção do Comparador Analógico

ISR(ANALOG_COMP_vect)//O LED vai acender quando o ambiente tiver com pouca luminosidade (tensão maior no terminal positivo do comparador)
{ 
 4d8:	1f 92       	push	r1
 4da:	0f 92       	push	r0
 4dc:	0f b6       	in	r0, 0x3f	; 63
 4de:	0f 92       	push	r0
 4e0:	11 24       	eor	r1, r1
 4e2:	8f 93       	push	r24
	if(tst_bit(ACSR,ACO))//verifica a mudança ocorrida na saída do comparador
 4e4:	00 b6       	in	r0, 0x30	; 48
 4e6:	05 fe       	sbrs	r0, 5
 4e8:	04 c0       	rjmp	.+8      	; 0x4f2 <__vector_23+0x1a>
	set_bit(PORTB,LED);
 4ea:	85 b1       	in	r24, 0x05	; 5
 4ec:	81 60       	ori	r24, 0x01	; 1
 4ee:	85 b9       	out	0x05, r24	; 5
 4f0:	03 c0       	rjmp	.+6      	; 0x4f8 <__vector_23+0x20>
	else
	clr_bit(PORTB,LED);
 4f2:	85 b1       	in	r24, 0x05	; 5
 4f4:	8e 7f       	andi	r24, 0xFE	; 254
 4f6:	85 b9       	out	0x05, r24	; 5
}
 4f8:	8f 91       	pop	r24
 4fa:	0f 90       	pop	r0
 4fc:	0f be       	out	0x3f, r0	; 63
 4fe:	0f 90       	pop	r0
 500:	1f 90       	pop	r1
 502:	18 95       	reti

00000504 <__vector_21>:


ISR(ADC_vect)
{
 504:	1f 92       	push	r1
 506:	0f 92       	push	r0
 508:	0f b6       	in	r0, 0x3f	; 63
 50a:	0f 92       	push	r0
 50c:	11 24       	eor	r1, r1
 50e:	2f 93       	push	r18
 510:	3f 93       	push	r19
 512:	4f 93       	push	r20
 514:	5f 93       	push	r21
 516:	6f 93       	push	r22
 518:	7f 93       	push	r23
 51a:	8f 93       	push	r24
 51c:	9f 93       	push	r25
 51e:	af 93       	push	r26
 520:	bf 93       	push	r27
 522:	ef 93       	push	r30
 524:	ff 93       	push	r31
	temp=ADC;
 526:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 52a:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
	temp = (temp/100000.0)*1465.0+30;
 52e:	80 e0       	ldi	r24, 0x00	; 0
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <__floatunsisf>
 536:	20 e0       	ldi	r18, 0x00	; 0
 538:	30 e5       	ldi	r19, 0x50	; 80
 53a:	43 ec       	ldi	r20, 0xC3	; 195
 53c:	57 e4       	ldi	r21, 0x47	; 71
 53e:	0e 94 31 03 	call	0x662	; 0x662 <__divsf3>
 542:	20 e0       	ldi	r18, 0x00	; 0
 544:	30 e2       	ldi	r19, 0x20	; 32
 546:	47 eb       	ldi	r20, 0xB7	; 183
 548:	54 e4       	ldi	r21, 0x44	; 68
 54a:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__mulsf3>
 54e:	20 e0       	ldi	r18, 0x00	; 0
 550:	30 e0       	ldi	r19, 0x00	; 0
 552:	40 ef       	ldi	r20, 0xF0	; 240
 554:	51 e4       	ldi	r21, 0x41	; 65
 556:	0e 94 c5 02 	call	0x58a	; 0x58a <__addsf3>
 55a:	0e 94 a3 03 	call	0x746	; 0x746 <__fixunssfsi>
 55e:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <__data_end+0x1>
 562:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <__data_end>
	 // tempetura tem uma faixa de 30 a 45 graus celsius
	//O valor de leitura do ADC é dado por ADC = Vin*1024/Vref, com Vref = 1,1V -> ADC=Vin*930.9090909
	
}
 566:	ff 91       	pop	r31
 568:	ef 91       	pop	r30
 56a:	bf 91       	pop	r27
 56c:	af 91       	pop	r26
 56e:	9f 91       	pop	r25
 570:	8f 91       	pop	r24
 572:	7f 91       	pop	r23
 574:	6f 91       	pop	r22
 576:	5f 91       	pop	r21
 578:	4f 91       	pop	r20
 57a:	3f 91       	pop	r19
 57c:	2f 91       	pop	r18
 57e:	0f 90       	pop	r0
 580:	0f be       	out	0x3f, r0	; 63
 582:	0f 90       	pop	r0
 584:	1f 90       	pop	r1
 586:	18 95       	reti

00000588 <__subsf3>:
 588:	50 58       	subi	r21, 0x80	; 128

0000058a <__addsf3>:
 58a:	bb 27       	eor	r27, r27
 58c:	aa 27       	eor	r26, r26
 58e:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__addsf3x>
 592:	0c 94 26 04 	jmp	0x84c	; 0x84c <__fp_round>
 596:	0e 94 18 04 	call	0x830	; 0x830 <__fp_pscA>
 59a:	38 f0       	brcs	.+14     	; 0x5aa <__addsf3+0x20>
 59c:	0e 94 1f 04 	call	0x83e	; 0x83e <__fp_pscB>
 5a0:	20 f0       	brcs	.+8      	; 0x5aa <__addsf3+0x20>
 5a2:	39 f4       	brne	.+14     	; 0x5b2 <__addsf3+0x28>
 5a4:	9f 3f       	cpi	r25, 0xFF	; 255
 5a6:	19 f4       	brne	.+6      	; 0x5ae <__addsf3+0x24>
 5a8:	26 f4       	brtc	.+8      	; 0x5b2 <__addsf3+0x28>
 5aa:	0c 94 15 04 	jmp	0x82a	; 0x82a <__fp_nan>
 5ae:	0e f4       	brtc	.+2      	; 0x5b2 <__addsf3+0x28>
 5b0:	e0 95       	com	r30
 5b2:	e7 fb       	bst	r30, 7
 5b4:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__fp_inf>

000005b8 <__addsf3x>:
 5b8:	e9 2f       	mov	r30, r25
 5ba:	0e 94 37 04 	call	0x86e	; 0x86e <__fp_split3>
 5be:	58 f3       	brcs	.-42     	; 0x596 <__addsf3+0xc>
 5c0:	ba 17       	cp	r27, r26
 5c2:	62 07       	cpc	r22, r18
 5c4:	73 07       	cpc	r23, r19
 5c6:	84 07       	cpc	r24, r20
 5c8:	95 07       	cpc	r25, r21
 5ca:	20 f0       	brcs	.+8      	; 0x5d4 <__addsf3x+0x1c>
 5cc:	79 f4       	brne	.+30     	; 0x5ec <__addsf3x+0x34>
 5ce:	a6 f5       	brtc	.+104    	; 0x638 <__addsf3x+0x80>
 5d0:	0c 94 59 04 	jmp	0x8b2	; 0x8b2 <__fp_zero>
 5d4:	0e f4       	brtc	.+2      	; 0x5d8 <__addsf3x+0x20>
 5d6:	e0 95       	com	r30
 5d8:	0b 2e       	mov	r0, r27
 5da:	ba 2f       	mov	r27, r26
 5dc:	a0 2d       	mov	r26, r0
 5de:	0b 01       	movw	r0, r22
 5e0:	b9 01       	movw	r22, r18
 5e2:	90 01       	movw	r18, r0
 5e4:	0c 01       	movw	r0, r24
 5e6:	ca 01       	movw	r24, r20
 5e8:	a0 01       	movw	r20, r0
 5ea:	11 24       	eor	r1, r1
 5ec:	ff 27       	eor	r31, r31
 5ee:	59 1b       	sub	r21, r25
 5f0:	99 f0       	breq	.+38     	; 0x618 <__addsf3x+0x60>
 5f2:	59 3f       	cpi	r21, 0xF9	; 249
 5f4:	50 f4       	brcc	.+20     	; 0x60a <__addsf3x+0x52>
 5f6:	50 3e       	cpi	r21, 0xE0	; 224
 5f8:	68 f1       	brcs	.+90     	; 0x654 <__addsf3x+0x9c>
 5fa:	1a 16       	cp	r1, r26
 5fc:	f0 40       	sbci	r31, 0x00	; 0
 5fe:	a2 2f       	mov	r26, r18
 600:	23 2f       	mov	r18, r19
 602:	34 2f       	mov	r19, r20
 604:	44 27       	eor	r20, r20
 606:	58 5f       	subi	r21, 0xF8	; 248
 608:	f3 cf       	rjmp	.-26     	; 0x5f0 <__addsf3x+0x38>
 60a:	46 95       	lsr	r20
 60c:	37 95       	ror	r19
 60e:	27 95       	ror	r18
 610:	a7 95       	ror	r26
 612:	f0 40       	sbci	r31, 0x00	; 0
 614:	53 95       	inc	r21
 616:	c9 f7       	brne	.-14     	; 0x60a <__addsf3x+0x52>
 618:	7e f4       	brtc	.+30     	; 0x638 <__addsf3x+0x80>
 61a:	1f 16       	cp	r1, r31
 61c:	ba 0b       	sbc	r27, r26
 61e:	62 0b       	sbc	r22, r18
 620:	73 0b       	sbc	r23, r19
 622:	84 0b       	sbc	r24, r20
 624:	ba f0       	brmi	.+46     	; 0x654 <__addsf3x+0x9c>
 626:	91 50       	subi	r25, 0x01	; 1
 628:	a1 f0       	breq	.+40     	; 0x652 <__addsf3x+0x9a>
 62a:	ff 0f       	add	r31, r31
 62c:	bb 1f       	adc	r27, r27
 62e:	66 1f       	adc	r22, r22
 630:	77 1f       	adc	r23, r23
 632:	88 1f       	adc	r24, r24
 634:	c2 f7       	brpl	.-16     	; 0x626 <__addsf3x+0x6e>
 636:	0e c0       	rjmp	.+28     	; 0x654 <__addsf3x+0x9c>
 638:	ba 0f       	add	r27, r26
 63a:	62 1f       	adc	r22, r18
 63c:	73 1f       	adc	r23, r19
 63e:	84 1f       	adc	r24, r20
 640:	48 f4       	brcc	.+18     	; 0x654 <__addsf3x+0x9c>
 642:	87 95       	ror	r24
 644:	77 95       	ror	r23
 646:	67 95       	ror	r22
 648:	b7 95       	ror	r27
 64a:	f7 95       	ror	r31
 64c:	9e 3f       	cpi	r25, 0xFE	; 254
 64e:	08 f0       	brcs	.+2      	; 0x652 <__addsf3x+0x9a>
 650:	b0 cf       	rjmp	.-160    	; 0x5b2 <__addsf3+0x28>
 652:	93 95       	inc	r25
 654:	88 0f       	add	r24, r24
 656:	08 f0       	brcs	.+2      	; 0x65a <__addsf3x+0xa2>
 658:	99 27       	eor	r25, r25
 65a:	ee 0f       	add	r30, r30
 65c:	97 95       	ror	r25
 65e:	87 95       	ror	r24
 660:	08 95       	ret

00000662 <__divsf3>:
 662:	0e 94 45 03 	call	0x68a	; 0x68a <__divsf3x>
 666:	0c 94 26 04 	jmp	0x84c	; 0x84c <__fp_round>
 66a:	0e 94 1f 04 	call	0x83e	; 0x83e <__fp_pscB>
 66e:	58 f0       	brcs	.+22     	; 0x686 <__divsf3+0x24>
 670:	0e 94 18 04 	call	0x830	; 0x830 <__fp_pscA>
 674:	40 f0       	brcs	.+16     	; 0x686 <__divsf3+0x24>
 676:	29 f4       	brne	.+10     	; 0x682 <__divsf3+0x20>
 678:	5f 3f       	cpi	r21, 0xFF	; 255
 67a:	29 f0       	breq	.+10     	; 0x686 <__divsf3+0x24>
 67c:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__fp_inf>
 680:	51 11       	cpse	r21, r1
 682:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__fp_szero>
 686:	0c 94 15 04 	jmp	0x82a	; 0x82a <__fp_nan>

0000068a <__divsf3x>:
 68a:	0e 94 37 04 	call	0x86e	; 0x86e <__fp_split3>
 68e:	68 f3       	brcs	.-38     	; 0x66a <__divsf3+0x8>

00000690 <__divsf3_pse>:
 690:	99 23       	and	r25, r25
 692:	b1 f3       	breq	.-20     	; 0x680 <__divsf3+0x1e>
 694:	55 23       	and	r21, r21
 696:	91 f3       	breq	.-28     	; 0x67c <__divsf3+0x1a>
 698:	95 1b       	sub	r25, r21
 69a:	55 0b       	sbc	r21, r21
 69c:	bb 27       	eor	r27, r27
 69e:	aa 27       	eor	r26, r26
 6a0:	62 17       	cp	r22, r18
 6a2:	73 07       	cpc	r23, r19
 6a4:	84 07       	cpc	r24, r20
 6a6:	38 f0       	brcs	.+14     	; 0x6b6 <__divsf3_pse+0x26>
 6a8:	9f 5f       	subi	r25, 0xFF	; 255
 6aa:	5f 4f       	sbci	r21, 0xFF	; 255
 6ac:	22 0f       	add	r18, r18
 6ae:	33 1f       	adc	r19, r19
 6b0:	44 1f       	adc	r20, r20
 6b2:	aa 1f       	adc	r26, r26
 6b4:	a9 f3       	breq	.-22     	; 0x6a0 <__divsf3_pse+0x10>
 6b6:	35 d0       	rcall	.+106    	; 0x722 <__divsf3_pse+0x92>
 6b8:	0e 2e       	mov	r0, r30
 6ba:	3a f0       	brmi	.+14     	; 0x6ca <__divsf3_pse+0x3a>
 6bc:	e0 e8       	ldi	r30, 0x80	; 128
 6be:	32 d0       	rcall	.+100    	; 0x724 <__divsf3_pse+0x94>
 6c0:	91 50       	subi	r25, 0x01	; 1
 6c2:	50 40       	sbci	r21, 0x00	; 0
 6c4:	e6 95       	lsr	r30
 6c6:	00 1c       	adc	r0, r0
 6c8:	ca f7       	brpl	.-14     	; 0x6bc <__divsf3_pse+0x2c>
 6ca:	2b d0       	rcall	.+86     	; 0x722 <__divsf3_pse+0x92>
 6cc:	fe 2f       	mov	r31, r30
 6ce:	29 d0       	rcall	.+82     	; 0x722 <__divsf3_pse+0x92>
 6d0:	66 0f       	add	r22, r22
 6d2:	77 1f       	adc	r23, r23
 6d4:	88 1f       	adc	r24, r24
 6d6:	bb 1f       	adc	r27, r27
 6d8:	26 17       	cp	r18, r22
 6da:	37 07       	cpc	r19, r23
 6dc:	48 07       	cpc	r20, r24
 6de:	ab 07       	cpc	r26, r27
 6e0:	b0 e8       	ldi	r27, 0x80	; 128
 6e2:	09 f0       	breq	.+2      	; 0x6e6 <__divsf3_pse+0x56>
 6e4:	bb 0b       	sbc	r27, r27
 6e6:	80 2d       	mov	r24, r0
 6e8:	bf 01       	movw	r22, r30
 6ea:	ff 27       	eor	r31, r31
 6ec:	93 58       	subi	r25, 0x83	; 131
 6ee:	5f 4f       	sbci	r21, 0xFF	; 255
 6f0:	3a f0       	brmi	.+14     	; 0x700 <__divsf3_pse+0x70>
 6f2:	9e 3f       	cpi	r25, 0xFE	; 254
 6f4:	51 05       	cpc	r21, r1
 6f6:	78 f0       	brcs	.+30     	; 0x716 <__divsf3_pse+0x86>
 6f8:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__fp_inf>
 6fc:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__fp_szero>
 700:	5f 3f       	cpi	r21, 0xFF	; 255
 702:	e4 f3       	brlt	.-8      	; 0x6fc <__divsf3_pse+0x6c>
 704:	98 3e       	cpi	r25, 0xE8	; 232
 706:	d4 f3       	brlt	.-12     	; 0x6fc <__divsf3_pse+0x6c>
 708:	86 95       	lsr	r24
 70a:	77 95       	ror	r23
 70c:	67 95       	ror	r22
 70e:	b7 95       	ror	r27
 710:	f7 95       	ror	r31
 712:	9f 5f       	subi	r25, 0xFF	; 255
 714:	c9 f7       	brne	.-14     	; 0x708 <__divsf3_pse+0x78>
 716:	88 0f       	add	r24, r24
 718:	91 1d       	adc	r25, r1
 71a:	96 95       	lsr	r25
 71c:	87 95       	ror	r24
 71e:	97 f9       	bld	r25, 7
 720:	08 95       	ret
 722:	e1 e0       	ldi	r30, 0x01	; 1
 724:	66 0f       	add	r22, r22
 726:	77 1f       	adc	r23, r23
 728:	88 1f       	adc	r24, r24
 72a:	bb 1f       	adc	r27, r27
 72c:	62 17       	cp	r22, r18
 72e:	73 07       	cpc	r23, r19
 730:	84 07       	cpc	r24, r20
 732:	ba 07       	cpc	r27, r26
 734:	20 f0       	brcs	.+8      	; 0x73e <__divsf3_pse+0xae>
 736:	62 1b       	sub	r22, r18
 738:	73 0b       	sbc	r23, r19
 73a:	84 0b       	sbc	r24, r20
 73c:	ba 0b       	sbc	r27, r26
 73e:	ee 1f       	adc	r30, r30
 740:	88 f7       	brcc	.-30     	; 0x724 <__divsf3_pse+0x94>
 742:	e0 95       	com	r30
 744:	08 95       	ret

00000746 <__fixunssfsi>:
 746:	0e 94 3f 04 	call	0x87e	; 0x87e <__fp_splitA>
 74a:	88 f0       	brcs	.+34     	; 0x76e <__fixunssfsi+0x28>
 74c:	9f 57       	subi	r25, 0x7F	; 127
 74e:	98 f0       	brcs	.+38     	; 0x776 <__fixunssfsi+0x30>
 750:	b9 2f       	mov	r27, r25
 752:	99 27       	eor	r25, r25
 754:	b7 51       	subi	r27, 0x17	; 23
 756:	b0 f0       	brcs	.+44     	; 0x784 <__fixunssfsi+0x3e>
 758:	e1 f0       	breq	.+56     	; 0x792 <__fixunssfsi+0x4c>
 75a:	66 0f       	add	r22, r22
 75c:	77 1f       	adc	r23, r23
 75e:	88 1f       	adc	r24, r24
 760:	99 1f       	adc	r25, r25
 762:	1a f0       	brmi	.+6      	; 0x76a <__fixunssfsi+0x24>
 764:	ba 95       	dec	r27
 766:	c9 f7       	brne	.-14     	; 0x75a <__fixunssfsi+0x14>
 768:	14 c0       	rjmp	.+40     	; 0x792 <__fixunssfsi+0x4c>
 76a:	b1 30       	cpi	r27, 0x01	; 1
 76c:	91 f0       	breq	.+36     	; 0x792 <__fixunssfsi+0x4c>
 76e:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__fp_zero>
 772:	b1 e0       	ldi	r27, 0x01	; 1
 774:	08 95       	ret
 776:	0c 94 59 04 	jmp	0x8b2	; 0x8b2 <__fp_zero>
 77a:	67 2f       	mov	r22, r23
 77c:	78 2f       	mov	r23, r24
 77e:	88 27       	eor	r24, r24
 780:	b8 5f       	subi	r27, 0xF8	; 248
 782:	39 f0       	breq	.+14     	; 0x792 <__fixunssfsi+0x4c>
 784:	b9 3f       	cpi	r27, 0xF9	; 249
 786:	cc f3       	brlt	.-14     	; 0x77a <__fixunssfsi+0x34>
 788:	86 95       	lsr	r24
 78a:	77 95       	ror	r23
 78c:	67 95       	ror	r22
 78e:	b3 95       	inc	r27
 790:	d9 f7       	brne	.-10     	; 0x788 <__fixunssfsi+0x42>
 792:	3e f4       	brtc	.+14     	; 0x7a2 <__fixunssfsi+0x5c>
 794:	90 95       	com	r25
 796:	80 95       	com	r24
 798:	70 95       	com	r23
 79a:	61 95       	neg	r22
 79c:	7f 4f       	sbci	r23, 0xFF	; 255
 79e:	8f 4f       	sbci	r24, 0xFF	; 255
 7a0:	9f 4f       	sbci	r25, 0xFF	; 255
 7a2:	08 95       	ret

000007a4 <__floatunsisf>:
 7a4:	e8 94       	clt
 7a6:	09 c0       	rjmp	.+18     	; 0x7ba <__floatsisf+0x12>

000007a8 <__floatsisf>:
 7a8:	97 fb       	bst	r25, 7
 7aa:	3e f4       	brtc	.+14     	; 0x7ba <__floatsisf+0x12>
 7ac:	90 95       	com	r25
 7ae:	80 95       	com	r24
 7b0:	70 95       	com	r23
 7b2:	61 95       	neg	r22
 7b4:	7f 4f       	sbci	r23, 0xFF	; 255
 7b6:	8f 4f       	sbci	r24, 0xFF	; 255
 7b8:	9f 4f       	sbci	r25, 0xFF	; 255
 7ba:	99 23       	and	r25, r25
 7bc:	a9 f0       	breq	.+42     	; 0x7e8 <__floatsisf+0x40>
 7be:	f9 2f       	mov	r31, r25
 7c0:	96 e9       	ldi	r25, 0x96	; 150
 7c2:	bb 27       	eor	r27, r27
 7c4:	93 95       	inc	r25
 7c6:	f6 95       	lsr	r31
 7c8:	87 95       	ror	r24
 7ca:	77 95       	ror	r23
 7cc:	67 95       	ror	r22
 7ce:	b7 95       	ror	r27
 7d0:	f1 11       	cpse	r31, r1
 7d2:	f8 cf       	rjmp	.-16     	; 0x7c4 <__floatsisf+0x1c>
 7d4:	fa f4       	brpl	.+62     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 7d6:	bb 0f       	add	r27, r27
 7d8:	11 f4       	brne	.+4      	; 0x7de <__floatsisf+0x36>
 7da:	60 ff       	sbrs	r22, 0
 7dc:	1b c0       	rjmp	.+54     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 7de:	6f 5f       	subi	r22, 0xFF	; 255
 7e0:	7f 4f       	sbci	r23, 0xFF	; 255
 7e2:	8f 4f       	sbci	r24, 0xFF	; 255
 7e4:	9f 4f       	sbci	r25, 0xFF	; 255
 7e6:	16 c0       	rjmp	.+44     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 7e8:	88 23       	and	r24, r24
 7ea:	11 f0       	breq	.+4      	; 0x7f0 <__floatsisf+0x48>
 7ec:	96 e9       	ldi	r25, 0x96	; 150
 7ee:	11 c0       	rjmp	.+34     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 7f0:	77 23       	and	r23, r23
 7f2:	21 f0       	breq	.+8      	; 0x7fc <__floatsisf+0x54>
 7f4:	9e e8       	ldi	r25, 0x8E	; 142
 7f6:	87 2f       	mov	r24, r23
 7f8:	76 2f       	mov	r23, r22
 7fa:	05 c0       	rjmp	.+10     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7fc:	66 23       	and	r22, r22
 7fe:	71 f0       	breq	.+28     	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 800:	96 e8       	ldi	r25, 0x86	; 134
 802:	86 2f       	mov	r24, r22
 804:	70 e0       	ldi	r23, 0x00	; 0
 806:	60 e0       	ldi	r22, 0x00	; 0
 808:	2a f0       	brmi	.+10     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 80a:	9a 95       	dec	r25
 80c:	66 0f       	add	r22, r22
 80e:	77 1f       	adc	r23, r23
 810:	88 1f       	adc	r24, r24
 812:	da f7       	brpl	.-10     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 814:	88 0f       	add	r24, r24
 816:	96 95       	lsr	r25
 818:	87 95       	ror	r24
 81a:	97 f9       	bld	r25, 7
 81c:	08 95       	ret

0000081e <__fp_inf>:
 81e:	97 f9       	bld	r25, 7
 820:	9f 67       	ori	r25, 0x7F	; 127
 822:	80 e8       	ldi	r24, 0x80	; 128
 824:	70 e0       	ldi	r23, 0x00	; 0
 826:	60 e0       	ldi	r22, 0x00	; 0
 828:	08 95       	ret

0000082a <__fp_nan>:
 82a:	9f ef       	ldi	r25, 0xFF	; 255
 82c:	80 ec       	ldi	r24, 0xC0	; 192
 82e:	08 95       	ret

00000830 <__fp_pscA>:
 830:	00 24       	eor	r0, r0
 832:	0a 94       	dec	r0
 834:	16 16       	cp	r1, r22
 836:	17 06       	cpc	r1, r23
 838:	18 06       	cpc	r1, r24
 83a:	09 06       	cpc	r0, r25
 83c:	08 95       	ret

0000083e <__fp_pscB>:
 83e:	00 24       	eor	r0, r0
 840:	0a 94       	dec	r0
 842:	12 16       	cp	r1, r18
 844:	13 06       	cpc	r1, r19
 846:	14 06       	cpc	r1, r20
 848:	05 06       	cpc	r0, r21
 84a:	08 95       	ret

0000084c <__fp_round>:
 84c:	09 2e       	mov	r0, r25
 84e:	03 94       	inc	r0
 850:	00 0c       	add	r0, r0
 852:	11 f4       	brne	.+4      	; 0x858 <__fp_round+0xc>
 854:	88 23       	and	r24, r24
 856:	52 f0       	brmi	.+20     	; 0x86c <__fp_round+0x20>
 858:	bb 0f       	add	r27, r27
 85a:	40 f4       	brcc	.+16     	; 0x86c <__fp_round+0x20>
 85c:	bf 2b       	or	r27, r31
 85e:	11 f4       	brne	.+4      	; 0x864 <__fp_round+0x18>
 860:	60 ff       	sbrs	r22, 0
 862:	04 c0       	rjmp	.+8      	; 0x86c <__fp_round+0x20>
 864:	6f 5f       	subi	r22, 0xFF	; 255
 866:	7f 4f       	sbci	r23, 0xFF	; 255
 868:	8f 4f       	sbci	r24, 0xFF	; 255
 86a:	9f 4f       	sbci	r25, 0xFF	; 255
 86c:	08 95       	ret

0000086e <__fp_split3>:
 86e:	57 fd       	sbrc	r21, 7
 870:	90 58       	subi	r25, 0x80	; 128
 872:	44 0f       	add	r20, r20
 874:	55 1f       	adc	r21, r21
 876:	59 f0       	breq	.+22     	; 0x88e <__fp_splitA+0x10>
 878:	5f 3f       	cpi	r21, 0xFF	; 255
 87a:	71 f0       	breq	.+28     	; 0x898 <__fp_splitA+0x1a>
 87c:	47 95       	ror	r20

0000087e <__fp_splitA>:
 87e:	88 0f       	add	r24, r24
 880:	97 fb       	bst	r25, 7
 882:	99 1f       	adc	r25, r25
 884:	61 f0       	breq	.+24     	; 0x89e <__fp_splitA+0x20>
 886:	9f 3f       	cpi	r25, 0xFF	; 255
 888:	79 f0       	breq	.+30     	; 0x8a8 <__fp_splitA+0x2a>
 88a:	87 95       	ror	r24
 88c:	08 95       	ret
 88e:	12 16       	cp	r1, r18
 890:	13 06       	cpc	r1, r19
 892:	14 06       	cpc	r1, r20
 894:	55 1f       	adc	r21, r21
 896:	f2 cf       	rjmp	.-28     	; 0x87c <__fp_split3+0xe>
 898:	46 95       	lsr	r20
 89a:	f1 df       	rcall	.-30     	; 0x87e <__fp_splitA>
 89c:	08 c0       	rjmp	.+16     	; 0x8ae <__fp_splitA+0x30>
 89e:	16 16       	cp	r1, r22
 8a0:	17 06       	cpc	r1, r23
 8a2:	18 06       	cpc	r1, r24
 8a4:	99 1f       	adc	r25, r25
 8a6:	f1 cf       	rjmp	.-30     	; 0x88a <__fp_splitA+0xc>
 8a8:	86 95       	lsr	r24
 8aa:	71 05       	cpc	r23, r1
 8ac:	61 05       	cpc	r22, r1
 8ae:	08 94       	sec
 8b0:	08 95       	ret

000008b2 <__fp_zero>:
 8b2:	e8 94       	clt

000008b4 <__fp_szero>:
 8b4:	bb 27       	eor	r27, r27
 8b6:	66 27       	eor	r22, r22
 8b8:	77 27       	eor	r23, r23
 8ba:	cb 01       	movw	r24, r22
 8bc:	97 f9       	bld	r25, 7
 8be:	08 95       	ret

000008c0 <__mulsf3>:
 8c0:	0e 94 73 04 	call	0x8e6	; 0x8e6 <__mulsf3x>
 8c4:	0c 94 26 04 	jmp	0x84c	; 0x84c <__fp_round>
 8c8:	0e 94 18 04 	call	0x830	; 0x830 <__fp_pscA>
 8cc:	38 f0       	brcs	.+14     	; 0x8dc <__mulsf3+0x1c>
 8ce:	0e 94 1f 04 	call	0x83e	; 0x83e <__fp_pscB>
 8d2:	20 f0       	brcs	.+8      	; 0x8dc <__mulsf3+0x1c>
 8d4:	95 23       	and	r25, r21
 8d6:	11 f0       	breq	.+4      	; 0x8dc <__mulsf3+0x1c>
 8d8:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__fp_inf>
 8dc:	0c 94 15 04 	jmp	0x82a	; 0x82a <__fp_nan>
 8e0:	11 24       	eor	r1, r1
 8e2:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__fp_szero>

000008e6 <__mulsf3x>:
 8e6:	0e 94 37 04 	call	0x86e	; 0x86e <__fp_split3>
 8ea:	70 f3       	brcs	.-36     	; 0x8c8 <__mulsf3+0x8>

000008ec <__mulsf3_pse>:
 8ec:	95 9f       	mul	r25, r21
 8ee:	c1 f3       	breq	.-16     	; 0x8e0 <__mulsf3+0x20>
 8f0:	95 0f       	add	r25, r21
 8f2:	50 e0       	ldi	r21, 0x00	; 0
 8f4:	55 1f       	adc	r21, r21
 8f6:	62 9f       	mul	r22, r18
 8f8:	f0 01       	movw	r30, r0
 8fa:	72 9f       	mul	r23, r18
 8fc:	bb 27       	eor	r27, r27
 8fe:	f0 0d       	add	r31, r0
 900:	b1 1d       	adc	r27, r1
 902:	63 9f       	mul	r22, r19
 904:	aa 27       	eor	r26, r26
 906:	f0 0d       	add	r31, r0
 908:	b1 1d       	adc	r27, r1
 90a:	aa 1f       	adc	r26, r26
 90c:	64 9f       	mul	r22, r20
 90e:	66 27       	eor	r22, r22
 910:	b0 0d       	add	r27, r0
 912:	a1 1d       	adc	r26, r1
 914:	66 1f       	adc	r22, r22
 916:	82 9f       	mul	r24, r18
 918:	22 27       	eor	r18, r18
 91a:	b0 0d       	add	r27, r0
 91c:	a1 1d       	adc	r26, r1
 91e:	62 1f       	adc	r22, r18
 920:	73 9f       	mul	r23, r19
 922:	b0 0d       	add	r27, r0
 924:	a1 1d       	adc	r26, r1
 926:	62 1f       	adc	r22, r18
 928:	83 9f       	mul	r24, r19
 92a:	a0 0d       	add	r26, r0
 92c:	61 1d       	adc	r22, r1
 92e:	22 1f       	adc	r18, r18
 930:	74 9f       	mul	r23, r20
 932:	33 27       	eor	r19, r19
 934:	a0 0d       	add	r26, r0
 936:	61 1d       	adc	r22, r1
 938:	23 1f       	adc	r18, r19
 93a:	84 9f       	mul	r24, r20
 93c:	60 0d       	add	r22, r0
 93e:	21 1d       	adc	r18, r1
 940:	82 2f       	mov	r24, r18
 942:	76 2f       	mov	r23, r22
 944:	6a 2f       	mov	r22, r26
 946:	11 24       	eor	r1, r1
 948:	9f 57       	subi	r25, 0x7F	; 127
 94a:	50 40       	sbci	r21, 0x00	; 0
 94c:	9a f0       	brmi	.+38     	; 0x974 <__stack+0x75>
 94e:	f1 f0       	breq	.+60     	; 0x98c <__stack+0x8d>
 950:	88 23       	and	r24, r24
 952:	4a f0       	brmi	.+18     	; 0x966 <__stack+0x67>
 954:	ee 0f       	add	r30, r30
 956:	ff 1f       	adc	r31, r31
 958:	bb 1f       	adc	r27, r27
 95a:	66 1f       	adc	r22, r22
 95c:	77 1f       	adc	r23, r23
 95e:	88 1f       	adc	r24, r24
 960:	91 50       	subi	r25, 0x01	; 1
 962:	50 40       	sbci	r21, 0x00	; 0
 964:	a9 f7       	brne	.-22     	; 0x950 <__stack+0x51>
 966:	9e 3f       	cpi	r25, 0xFE	; 254
 968:	51 05       	cpc	r21, r1
 96a:	80 f0       	brcs	.+32     	; 0x98c <__stack+0x8d>
 96c:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__fp_inf>
 970:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__fp_szero>
 974:	5f 3f       	cpi	r21, 0xFF	; 255
 976:	e4 f3       	brlt	.-8      	; 0x970 <__stack+0x71>
 978:	98 3e       	cpi	r25, 0xE8	; 232
 97a:	d4 f3       	brlt	.-12     	; 0x970 <__stack+0x71>
 97c:	86 95       	lsr	r24
 97e:	77 95       	ror	r23
 980:	67 95       	ror	r22
 982:	b7 95       	ror	r27
 984:	f7 95       	ror	r31
 986:	e7 95       	ror	r30
 988:	9f 5f       	subi	r25, 0xFF	; 255
 98a:	c1 f7       	brne	.-16     	; 0x97c <__stack+0x7d>
 98c:	fe 2b       	or	r31, r30
 98e:	88 0f       	add	r24, r24
 990:	91 1d       	adc	r25, r1
 992:	96 95       	lsr	r25
 994:	87 95       	ror	r24
 996:	97 f9       	bld	r25, 7
 998:	08 95       	ret

0000099a <__umulhisi3>:
 99a:	a2 9f       	mul	r26, r18
 99c:	b0 01       	movw	r22, r0
 99e:	b3 9f       	mul	r27, r19
 9a0:	c0 01       	movw	r24, r0
 9a2:	a3 9f       	mul	r26, r19
 9a4:	70 0d       	add	r23, r0
 9a6:	81 1d       	adc	r24, r1
 9a8:	11 24       	eor	r1, r1
 9aa:	91 1d       	adc	r25, r1
 9ac:	b2 9f       	mul	r27, r18
 9ae:	70 0d       	add	r23, r0
 9b0:	81 1d       	adc	r24, r1
 9b2:	11 24       	eor	r1, r1
 9b4:	91 1d       	adc	r25, r1
 9b6:	08 95       	ret

000009b8 <_exit>:
 9b8:	f8 94       	cli

000009ba <__stop_program>:
 9ba:	ff cf       	rjmp	.-2      	; 0x9ba <__stop_program>
